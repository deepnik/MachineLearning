Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
 RESTART: F:/Machine Learning/Day10____26-June-2019/1.RectanglefromMatrix.py 
Traceback (most recent call last):
  File "F:/Machine Learning/Day10____26-June-2019/1.RectanglefromMatrix.py", line 23, in <module>
    a[0,0]=1
NameError: name 'a' is not defined
>>> 
 RESTART: F:/Machine Learning/Day10____26-June-2019/1.RectanglefromMatrix.py 
[[1. 0. 0. 1. 0. 0.]
 [1. 0. 1. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1.]
 [0. 0. 0. 0. 0. 1.]]
............
No
>>> 
 RESTART: F:/Machine Learning/Day10____26-June-2019/1.RectanglefromMatrix.py 
[[1. 0. 0. 1. 0. 0.]
 [1. 0. 1. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1.]
 [0. 0. 0. 0. 0. 1.]]
............
No
>>> 
 RESTART: F:/Machine Learning/Day10____26-June-2019/2.RectagnleFromMatrix.py 
Enter the number of rows you want: 5
Enter the number of columns you want: 6
Traceback (most recent call last):
  File "F:/Machine Learning/Day10____26-June-2019/2.RectagnleFromMatrix.py", line 10, in <module>
    for j in range(0,columns):
NameError: name 'columns' is not defined
>>> 
 RESTART: F:/Machine Learning/Day10____26-June-2019/2.RectagnleFromMatrix.py 
Enter the number of rows you want: 5
Enter the number of columns you want: 6
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
>>> a=np.array(90)
>>> a
array(90)
>>> a=np.arange(90)
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a1=a.reshape(3,3,3)
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    a1=a.reshape(3,3,3)
ValueError: cannot reshape array of size 90 into shape (3,3,3)
>>> a1=a.reshape(9,10)
>>> a1
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
       [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
       [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
       [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
       [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
       [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
       [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
       [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
       [80, 81, 82, 83, 84, 85, 86, 87, 88, 89]])
>>> a=np.arange(500)
>>> a
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
       182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
       195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
       208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
       221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
       234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
       247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
       260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
       273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
       286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298,
       299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
       312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
       325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337,
       338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
       351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
       364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
       377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389,
       390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
       403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
       416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
       429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
       442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
       455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
       468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
       481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
       494, 495, 496, 497, 498, 499])
>>> a1=a.reshape(50,10)
>>> a1
array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  21,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 161, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 171, 172, 173, 174, 175, 176, 177, 178, 179],
       [180, 181, 182, 183, 184, 185, 186, 187, 188, 189],
       [190, 191, 192, 193, 194, 195, 196, 197, 198, 199],
       [200, 201, 202, 203, 204, 205, 206, 207, 208, 209],
       [210, 211, 212, 213, 214, 215, 216, 217, 218, 219],
       [220, 221, 222, 223, 224, 225, 226, 227, 228, 229],
       [230, 231, 232, 233, 234, 235, 236, 237, 238, 239],
       [240, 241, 242, 243, 244, 245, 246, 247, 248, 249],
       [250, 251, 252, 253, 254, 255, 256, 257, 258, 259],
       [260, 261, 262, 263, 264, 265, 266, 267, 268, 269],
       [270, 271, 272, 273, 274, 275, 276, 277, 278, 279],
       [280, 281, 282, 283, 284, 285, 286, 287, 288, 289],
       [290, 291, 292, 293, 294, 295, 296, 297, 298, 299],
       [300, 301, 302, 303, 304, 305, 306, 307, 308, 309],
       [310, 311, 312, 313, 314, 315, 316, 317, 318, 319],
       [320, 321, 322, 323, 324, 325, 326, 327, 328, 329],
       [330, 331, 332, 333, 334, 335, 336, 337, 338, 339],
       [340, 341, 342, 343, 344, 345, 346, 347, 348, 349],
       [350, 351, 352, 353, 354, 355, 356, 357, 358, 359],
       [360, 361, 362, 363, 364, 365, 366, 367, 368, 369],
       [370, 371, 372, 373, 374, 375, 376, 377, 378, 379],
       [380, 381, 382, 383, 384, 385, 386, 387, 388, 389],
       [390, 391, 392, 393, 394, 395, 396, 397, 398, 399],
       [400, 401, 402, 403, 404, 405, 406, 407, 408, 409],
       [410, 411, 412, 413, 414, 415, 416, 417, 418, 419],
       [420, 421, 422, 423, 424, 425, 426, 427, 428, 429],
       [430, 431, 432, 433, 434, 435, 436, 437, 438, 439],
       [440, 441, 442, 443, 444, 445, 446, 447, 448, 449],
       [450, 451, 452, 453, 454, 455, 456, 457, 458, 459],
       [460, 461, 462, 463, 464, 465, 466, 467, 468, 469],
       [470, 471, 472, 473, 474, 475, 476, 477, 478, 479],
       [480, 481, 482, 483, 484, 485, 486, 487, 488, 489],
       [490, 491, 492, 493, 494, 495, 496, 497, 498, 499]])
>>> a=np.arange(90)
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a.reshape(3,3,5,2)
array([[[[ 0,  1],
         [ 2,  3],
         [ 4,  5],
         [ 6,  7],
         [ 8,  9]],

        [[10, 11],
         [12, 13],
         [14, 15],
         [16, 17],
         [18, 19]],

        [[20, 21],
         [22, 23],
         [24, 25],
         [26, 27],
         [28, 29]]],


       [[[30, 31],
         [32, 33],
         [34, 35],
         [36, 37],
         [38, 39]],

        [[40, 41],
         [42, 43],
         [44, 45],
         [46, 47],
         [48, 49]],

        [[50, 51],
         [52, 53],
         [54, 55],
         [56, 57],
         [58, 59]]],


       [[[60, 61],
         [62, 63],
         [64, 65],
         [66, 67],
         [68, 69]],

        [[70, 71],
         [72, 73],
         [74, 75],
         [76, 77],
         [78, 79]],

        [[80, 81],
         [82, 83],
         [84, 85],
         [86, 87],
         [88, 89]]]])
>>> a.reshape(9,10)
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
       [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
       [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
       [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
       [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
       [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
       [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
       [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
       [80, 81, 82, 83, 84, 85, 86, 87, 88, 89]])
>>> a.reshape(3,3,10)
array([[[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
        [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
        [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]],

       [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
        [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
        [50, 51, 52, 53, 54, 55, 56, 57, 58, 59]],

       [[60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
        [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
        [80, 81, 82, 83, 84, 85, 86, 87, 88, 89]]])
>>> a.reshape(1,2,5,9)
array([[[[ 0,  1,  2,  3,  4,  5,  6,  7,  8],
         [ 9, 10, 11, 12, 13, 14, 15, 16, 17],
         [18, 19, 20, 21, 22, 23, 24, 25, 26],
         [27, 28, 29, 30, 31, 32, 33, 34, 35],
         [36, 37, 38, 39, 40, 41, 42, 43, 44]],

        [[45, 46, 47, 48, 49, 50, 51, 52, 53],
         [54, 55, 56, 57, 58, 59, 60, 61, 62],
         [63, 64, 65, 66, 67, 68, 69, 70, 71],
         [72, 73, 74, 75, 76, 77, 78, 79, 80],
         [81, 82, 83, 84, 85, 86, 87, 88, 89]]]])
>>> a.reshape(2,5,9)
array([[[ 0,  1,  2,  3,  4,  5,  6,  7,  8],
        [ 9, 10, 11, 12, 13, 14, 15, 16, 17],
        [18, 19, 20, 21, 22, 23, 24, 25, 26],
        [27, 28, 29, 30, 31, 32, 33, 34, 35],
        [36, 37, 38, 39, 40, 41, 42, 43, 44]],

       [[45, 46, 47, 48, 49, 50, 51, 52, 53],
        [54, 55, 56, 57, 58, 59, 60, 61, 62],
        [63, 64, 65, 66, 67, 68, 69, 70, 71],
        [72, 73, 74, 75, 76, 77, 78, 79, 80],
        [81, 82, 83, 84, 85, 86, 87, 88, 89]]])
>>> a.ndim
1
>>> a.shape
(90,)
>>> a.size
90
>>> a[0]
0
>>> [1]
[1]
>>> a[48]=52
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a[52]=48
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a*2
array([  0,   2,   4,   6,   8,  10,  12,  14,  16,  18,  20,  22,  24,
        26,  28,  30,  32,  34,  36,  38,  40,  42,  44,  46,  48,  50,
        52,  54,  56,  58,  60,  62,  64,  66,  68,  70,  72,  74,  76,
        78,  80,  82,  84,  86,  88,  90,  92,  94, 104,  98, 100, 102,
        96, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128,
       130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154,
       156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178])
>>> a+2
array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 51, 52,
       53, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
       70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
       87, 88, 89, 90, 91])
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a[48]=52
>>> a[52]=48
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a[52]=48
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a[48]=52
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 49, 50,
       51, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a[48]=48
>>> a[52]=52
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a+2
array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
       53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
       70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
       87, 88, 89, 90, 91])
>>> a
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a*2*2
array([  0,   4,   8,  12,  16,  20,  24,  28,  32,  36,  40,  44,  48,
        52,  56,  60,  64,  68,  72,  76,  80,  84,  88,  92,  96, 100,
       104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152,
       156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204,
       208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256,
       260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308,
       312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356])
>>> a*3*2
array([  0,   6,  12,  18,  24,  30,  36,  42,  48,  54,  60,  66,  72,
        78,  84,  90,  96, 102, 108, 114, 120, 126, 132, 138, 144, 150,
       156, 162, 168, 174, 180, 186, 192, 198, 204, 210, 216, 222, 228,
       234, 240, 246, 252, 258, 264, 270, 276, 282, 288, 294, 300, 306,
       312, 318, 324, 330, 336, 342, 348, 354, 360, 366, 372, 378, 384,
       390, 396, 402, 408, 414, 420, 426, 432, 438, 444, 450, 456, 462,
       468, 474, 480, 486, 492, 498, 504, 510, 516, 522, 528, 534])
>>> a.max()
89
>>> a.min()
0
>>> a.T
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> a.reshape(3,3,10)
array([[[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
        [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
        [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]],

       [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
        [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
        [50, 51, 52, 53, 54, 55, 56, 57, 58, 59]],

       [[60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
        [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
        [80, 81, 82, 83, 84, 85, 86, 87, 88, 89]]])
>>> a.reshape(3,3,10).T
array([[[ 0, 30, 60],
        [10, 40, 70],
        [20, 50, 80]],

       [[ 1, 31, 61],
        [11, 41, 71],
        [21, 51, 81]],

       [[ 2, 32, 62],
        [12, 42, 72],
        [22, 52, 82]],

       [[ 3, 33, 63],
        [13, 43, 73],
        [23, 53, 83]],

       [[ 4, 34, 64],
        [14, 44, 74],
        [24, 54, 84]],

       [[ 5, 35, 65],
        [15, 45, 75],
        [25, 55, 85]],

       [[ 6, 36, 66],
        [16, 46, 76],
        [26, 56, 86]],

       [[ 7, 37, 67],
        [17, 47, 77],
        [27, 57, 87]],

       [[ 8, 38, 68],
        [18, 48, 78],
        [28, 58, 88]],

       [[ 9, 39, 69],
        [19, 49, 79],
        [29, 59, 89]]])
>>> a.all
<built-in method all of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.any
<built-in method any of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.argmax
<built-in method argmax of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.argmin
<built-in method argmin of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.argpartition
<built-in method argpartition of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.argsort
<built-in method argsort of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.astype
<built-in method astype of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.base
>>> a.byteswap
<built-in method byteswap of numpy.ndarray object at 0x000001B57C1CB620>
>>> a.data
<memory at 0x000001B57C0F4E88>
>>> a=[1,5,8,0,0,0,5]
>>> a
[1, 5, 8, 0, 0, 0, 5]
>>> a=np.count_nonzero(a)
>>> a
4
>>> del a[2]
Traceback (most recent call last):
  File "<pyshell#63>", line 1, in <module>
    del a[2]
TypeError: 'int' object does not support item deletion
>>> del a[1]
Traceback (most recent call last):
  File "<pyshell#64>", line 1, in <module>
    del a[1]
TypeError: 'int' object does not support item deletion
>>> a=[1,2,3,4,5,6,7,0,2,0,5,0,7,0,9,0]
>>> a
[1, 2, 3, 4, 5, 6, 7, 0, 2, 0, 5, 0, 7, 0, 9, 0]
>>> del a[0]
>>> 
>>> a
[2, 3, 4, 5, 6, 7, 0, 2, 0, 5, 0, 7, 0, 9, 0]
>>> np.where(5)
(array([0], dtype=int64),)
>>> np.where(a=5)
Traceback (most recent call last):
  File "<pyshell#71>", line 1, in <module>
    np.where(a=5)
TypeError: where() takes no keyword arguments
>>> a=np.where(a=5)
Traceback (most recent call last):
  File "<pyshell#72>", line 1, in <module>
    a=np.where(a=5)
TypeError: where() takes no keyword arguments
>>> i=np.where(a=5)
Traceback (most recent call last):
  File "<pyshell#73>", line 1, in <module>
    i=np.where(a=5)
TypeError: where() takes no keyword arguments
>>> i=np.where(a==5)
>>> i
(array([], dtype=int64),)
>>> np.where(a==5)
(array([], dtype=int64),)
>>> a
[2, 3, 4, 5, 6, 7, 0, 2, 0, 5, 0, 7, 0, 9, 0]
>>> np.where(a==4)
(array([], dtype=int64),)
>>> a=np.array([1,5,8,0,0,0,5])
>>> a
array([1, 5, 8, 0, 0, 0, 5])
>>> i=np.count_nonzerp(a)
Traceback (most recent call last):
  File "<pyshell#81>", line 1, in <module>
    i=np.count_nonzerp(a)
AttributeError: module 'numpy' has no attribute 'count_nonzerp'
>>> i=np.count_nonzero(a)
>>> i
4
>>> del a[2]
Traceback (most recent call last):
  File "<pyshell#84>", line 1, in <module>
    del a[2]
ValueError: cannot delete array elements
>>> del a
>>> a
Traceback (most recent call last):
  File "<pyshell#86>", line 1, in <module>
    a
NameError: name 'a' is not defined
>>> a=np.array[1,5,8,0,0,0,5]
Traceback (most recent call last):
  File "<pyshell#87>", line 1, in <module>
    a=np.array[1,5,8,0,0,0,5]
TypeError: 'builtin_function_or_method' object is not subscriptable
>>> a=np.array([1,5,8,0,0,0,5])
>>> a
array([1, 5, 8, 0, 0, 0, 5])
>>> np.where(5)
(array([0], dtype=int64),)
>>> np.where(1)
(array([0], dtype=int64),)
>>> np.where(8)
(array([0], dtype=int64),)
>>> i=np.count_nonzero(a)
>>> i
4
>>> np.where(a==4)
(array([], dtype=int64),)
>>> i=np.where(a==4)
>>> i
(array([], dtype=int64),)
>>> i=np.where(a==1)
>>> i
(array([0], dtype=int64),)
>>> i=np.where(a==8)
>>> i
(array([2], dtype=int64),)
>>> i=np.where(a>0)
>>> i
(array([0, 1, 2, 6], dtype=int64),)
>>> np.delete(a,2)
array([1, 5, 0, 0, 0, 5])
>>> np.delete(a,3)
array([1, 5, 8, 0, 0, 5])
>>> np.delete(a,4)
array([1, 5, 8, 0, 0, 5])
>>> np.delete(a,5)
array([1, 5, 8, 0, 0, 5])
>>> a
array([1, 5, 8, 0, 0, 0, 5])
>>> np.delete(a,4)
array([1, 5, 8, 0, 0, 5])
>>> np.delete(a,4)
array([1, 5, 8, 0, 0, 5])
>>> np.delete(a,2)
array([1, 5, 0, 0, 0, 5])
>>> np.arange(180)
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> np.reshape(18,10)
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 56, in _wrapfunc
    return getattr(obj, method)(*args, **kwds)
AttributeError: 'int' object has no attribute 'reshape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<pyshell#113>", line 1, in <module>
    np.reshape(18,10)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 292, in reshape
    return _wrapfunc(a, 'reshape', newshape, order=order)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 66, in _wrapfunc
    return _wrapit(obj, method, *args, **kwds)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 46, in _wrapit
    result = getattr(asarray(obj), method)(*args, **kwds)
ValueError: cannot reshape array of size 1 into shape (10,)
>>> a=np.reshape(18,10)
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 56, in _wrapfunc
    return getattr(obj, method)(*args, **kwds)
AttributeError: 'int' object has no attribute 'reshape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<pyshell#114>", line 1, in <module>
    a=np.reshape(18,10)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 292, in reshape
    return _wrapfunc(a, 'reshape', newshape, order=order)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 66, in _wrapfunc
    return _wrapit(obj, method, *args, **kwds)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 46, in _wrapit
    result = getattr(asarray(obj), method)(*args, **kwds)
ValueError: cannot reshape array of size 1 into shape (10,)
>>> a=np.arange(180)
>>> a
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> a.reshape(18,10)
array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  21,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 161, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 171, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> np.delete(1,1)
Traceback (most recent call last):
  File "<pyshell#118>", line 1, in <module>
    np.delete(1,1)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4376, in delete
    "size %i" % (obj, axis, N))
IndexError: index 1 is out of bounds for axis 0 with size 1
>>> np.delete(a,1)
array([  0,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,
        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,
        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,
        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,
        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
        92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
       118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
       131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
       144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
       157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
       170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> a=np.arange(180)
>>> a
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> a.reshape(18,10)
array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  21,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 161, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 171, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> a=a.flattern()
Traceback (most recent call last):
  File "<pyshell#123>", line 1, in <module>
    a=a.flattern()
AttributeError: 'numpy.ndarray' object has no attribute 'flattern'
>>> a=a.flatten()
>>> a
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> np.delete(113)
Traceback (most recent call last):
  File "<pyshell#126>", line 1, in <module>
    np.delete(113)
TypeError: delete() missing 1 required positional argument: 'obj'
>>> np.delete(a,1,0)
array([  0,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,
        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,
        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,
        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,
        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
        92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
       118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
       131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
       144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
       157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
       170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> np.delete(a,1,1)
Traceback (most recent call last):
  File "<pyshell#128>", line 1, in <module>
    np.delete(a,1,1)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1
>>> a.delete(a,1,1)
Traceback (most recent call last):
  File "<pyshell#129>", line 1, in <module>
    a.delete(a,1,1)
AttributeError: 'numpy.ndarray' object has no attribute 'delete'
>>> np.delete(a,1,2)
Traceback (most recent call last):
  File "<pyshell#130>", line 1, in <module>
    np.delete(a,1,2)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 2 is out of bounds for array of dimension 1
>>> a.reshape(18,10)

array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  21,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 161, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 171, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> b=np.delete(a,1,0)
>>> b
array([  0,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,
        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,
        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,
        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,
        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
        92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
       118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
       131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
       144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
       157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
       170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>> b=np.delete(a,1,1)
Traceback (most recent call last):
  File "<pyshell#134>", line 1, in <module>
    b=np.delete(a,1,1)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1
>>> b=a.reshape()
Traceback (most recent call last):
  File "<pyshell#135>", line 1, in <module>
    b=a.reshape()
TypeError: reshape() takes exactly 1 argument (0 given)
>>> b=a.reshape(18,10)
>>> b
array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  21,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 161, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 171, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> d=np.delete(b,1,1)
>>> d
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> d.reshape(18,10)
Traceback (most recent call last):
  File "<pyshell#140>", line 1, in <module>
    d.reshape(18,10)
ValueError: cannot reshape array of size 162 into shape (18,10)
>>> d.reshape(81,2)
array([[  0,   2],
       [  3,   4],
       [  5,   6],
       [  7,   8],
       [  9,  10],
       [ 12,  13],
       [ 14,  15],
       [ 16,  17],
       [ 18,  19],
       [ 20,  22],
       [ 23,  24],
       [ 25,  26],
       [ 27,  28],
       [ 29,  30],
       [ 32,  33],
       [ 34,  35],
       [ 36,  37],
       [ 38,  39],
       [ 40,  42],
       [ 43,  44],
       [ 45,  46],
       [ 47,  48],
       [ 49,  50],
       [ 52,  53],
       [ 54,  55],
       [ 56,  57],
       [ 58,  59],
       [ 60,  62],
       [ 63,  64],
       [ 65,  66],
       [ 67,  68],
       [ 69,  70],
       [ 72,  73],
       [ 74,  75],
       [ 76,  77],
       [ 78,  79],
       [ 80,  82],
       [ 83,  84],
       [ 85,  86],
       [ 87,  88],
       [ 89,  90],
       [ 92,  93],
       [ 94,  95],
       [ 96,  97],
       [ 98,  99],
       [100, 102],
       [103, 104],
       [105, 106],
       [107, 108],
       [109, 110],
       [112, 113],
       [114, 115],
       [116, 117],
       [118, 119],
       [120, 122],
       [123, 124],
       [125, 126],
       [127, 128],
       [129, 130],
       [132, 133],
       [134, 135],
       [136, 137],
       [138, 139],
       [140, 142],
       [143, 144],
       [145, 146],
       [147, 148],
       [149, 150],
       [152, 153],
       [154, 155],
       [156, 157],
       [158, 159],
       [160, 162],
       [163, 164],
       [165, 166],
       [167, 168],
       [169, 170],
       [172, 173],
       [174, 175],
       [176, 177],
       [178, 179]])
>>> d.reshape(2,81)
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9,  10,  12,  13,  14,
         15,  16,  17,  18,  19,  20,  22,  23,  24,  25,  26,  27,  28,
         29,  30,  32,  33,  34,  35,  36,  37,  38,  39,  40,  42,  43,
         44,  45,  46,  47,  48,  49,  50,  52,  53,  54,  55,  56,  57,
         58,  59,  60,  62,  63,  64,  65,  66,  67,  68,  69,  70,  72,
         73,  74,  75,  76,  77,  78,  79,  80,  82,  83,  84,  85,  86,
         87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99, 100, 102, 103, 104,
        105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118,
        119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133,
        134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147,
        148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162,
        163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176,
        177, 178, 179]])
>>> e=np.delete(d,1,11)
Traceback (most recent call last):
  File "<pyshell#143>", line 1, in <module>
    e=np.delete(d,1,11)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 11 is out of bounds for array of dimension 2
>>> e=np.delete(d,11,1)
Traceback (most recent call last):
  File "<pyshell#144>", line 1, in <module>
    e=np.delete(d,11,1)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4376, in delete
    "size %i" % (obj, axis, N))
IndexError: index 11 is out of bounds for axis 1 with size 9
>>> e=np.delete(d,1,1)
>>> e
array([[  0,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  93,  94,  95,  96,  97,  98,  99],
       [100, 103, 104, 105, 106, 107, 108, 109],
       [110, 113, 114, 115, 116, 117, 118, 119],
       [120, 123, 124, 125, 126, 127, 128, 129],
       [130, 133, 134, 135, 136, 137, 138, 139],
       [140, 143, 144, 145, 146, 147, 148, 149],
       [150, 153, 154, 155, 156, 157, 158, 159],
       [160, 163, 164, 165, 166, 167, 168, 169],
       [170, 173, 174, 175, 176, 177, 178, 179]])
>>> f=np.delete(e,1,1)
>>> f
array([[  0,   4,   5,   6,   7,   8,   9],
       [ 10,  14,  15,  16,  17,  18,  19],
       [ 20,  24,  25,  26,  27,  28,  29],
       [ 30,  34,  35,  36,  37,  38,  39],
       [ 40,  44,  45,  46,  47,  48,  49],
       [ 50,  54,  55,  56,  57,  58,  59],
       [ 60,  64,  65,  66,  67,  68,  69],
       [ 70,  74,  75,  76,  77,  78,  79],
       [ 80,  84,  85,  86,  87,  88,  89],
       [ 90,  94,  95,  96,  97,  98,  99],
       [100, 104, 105, 106, 107, 108, 109],
       [110, 114, 115, 116, 117, 118, 119],
       [120, 124, 125, 126, 127, 128, 129],
       [130, 134, 135, 136, 137, 138, 139],
       [140, 144, 145, 146, 147, 148, 149],
       [150, 154, 155, 156, 157, 158, 159],
       [160, 164, 165, 166, 167, 168, 169],
       [170, 174, 175, 176, 177, 178, 179]])
>>> g=np.delete(f,1,1)
>>> g
array([[  0,   5,   6,   7,   8,   9],
       [ 10,  15,  16,  17,  18,  19],
       [ 20,  25,  26,  27,  28,  29],
       [ 30,  35,  36,  37,  38,  39],
       [ 40,  45,  46,  47,  48,  49],
       [ 50,  55,  56,  57,  58,  59],
       [ 60,  65,  66,  67,  68,  69],
       [ 70,  75,  76,  77,  78,  79],
       [ 80,  85,  86,  87,  88,  89],
       [ 90,  95,  96,  97,  98,  99],
       [100, 105, 106, 107, 108, 109],
       [110, 115, 116, 117, 118, 119],
       [120, 125, 126, 127, 128, 129],
       [130, 135, 136, 137, 138, 139],
       [140, 145, 146, 147, 148, 149],
       [150, 155, 156, 157, 158, 159],
       [160, 165, 166, 167, 168, 169],
       [170, 175, 176, 177, 178, 179]])
>>> h=np.delete(g,1,1)
>>> h
array([[  0,   6,   7,   8,   9],
       [ 10,  16,  17,  18,  19],
       [ 20,  26,  27,  28,  29],
       [ 30,  36,  37,  38,  39],
       [ 40,  46,  47,  48,  49],
       [ 50,  56,  57,  58,  59],
       [ 60,  66,  67,  68,  69],
       [ 70,  76,  77,  78,  79],
       [ 80,  86,  87,  88,  89],
       [ 90,  96,  97,  98,  99],
       [100, 106, 107, 108, 109],
       [110, 116, 117, 118, 119],
       [120, 126, 127, 128, 129],
       [130, 136, 137, 138, 139],
       [140, 146, 147, 148, 149],
       [150, 156, 157, 158, 159],
       [160, 166, 167, 168, 169],
       [170, 176, 177, 178, 179]])
>>> i=np.delete(h,1,1)
>>> i
array([[  0,   7,   8,   9],
       [ 10,  17,  18,  19],
       [ 20,  27,  28,  29],
       [ 30,  37,  38,  39],
       [ 40,  47,  48,  49],
       [ 50,  57,  58,  59],
       [ 60,  67,  68,  69],
       [ 70,  77,  78,  79],
       [ 80,  87,  88,  89],
       [ 90,  97,  98,  99],
       [100, 107, 108, 109],
       [110, 117, 118, 119],
       [120, 127, 128, 129],
       [130, 137, 138, 139],
       [140, 147, 148, 149],
       [150, 157, 158, 159],
       [160, 167, 168, 169],
       [170, 177, 178, 179]])
>>> j=np.delete(i,1,1)
>>> j
array([[  0,   8,   9],
       [ 10,  18,  19],
       [ 20,  28,  29],
       [ 30,  38,  39],
       [ 40,  48,  49],
       [ 50,  58,  59],
       [ 60,  68,  69],
       [ 70,  78,  79],
       [ 80,  88,  89],
       [ 90,  98,  99],
       [100, 108, 109],
       [110, 118, 119],
       [120, 128, 129],
       [130, 138, 139],
       [140, 148, 149],
       [150, 158, 159],
       [160, 168, 169],
       [170, 178, 179]])
>>> k=np.delete(1:5,1)
SyntaxError: invalid syntax
>>> k=np.delete(j,1:5,1)
SyntaxError: invalid syntax
>>> a
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179])
>>>  d=np.delete(b,1,1)
SyntaxError: unexpected indent
>>> d=np.delete(b,1,1)
>>> d
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> d[10]
array([100, 102, 103, 104, 105, 106, 107, 108, 109])
>>> d[10][5]
106
>>> d[0]
array([0, 2, 3, 4, 5, 6, 7, 8, 9])
>>> d[0][10]
Traceback (most recent call last):
  File "<pyshell#166>", line 1, in <module>
    d[0][10]
IndexError: index 10 is out of bounds for axis 0 with size 9
>>> d[0][9]
Traceback (most recent call last):
  File "<pyshell#167>", line 1, in <module>
    d[0][9]
IndexError: index 9 is out of bounds for axis 0 with size 9
>>> d[0][8]
9
>>> np.delete(d,range(1,4))
array([  0,   5,   6,   7,   8,   9,  10,  12,  13,  14,  15,  16,  17,
        18,  19,  20,  22,  23,  24,  25,  26,  27,  28,  29,  30,  32,
        33,  34,  35,  36,  37,  38,  39,  40,  42,  43,  44,  45,  46,
        47,  48,  49,  50,  52,  53,  54,  55,  56,  57,  58,  59,  60,
        62,  63,  64,  65,  66,  67,  68,  69,  70,  72,  73,  74,  75,
        76,  77,  78,  79,  80,  82,  83,  84,  85,  86,  87,  88,  89,
        90,  92,  93,  94,  95,  96,  97,  98,  99, 100, 102, 103, 104,
       105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118,
       119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133,
       134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147,
       148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162,
       163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176,
       177, 178, 179])
>>> d=np.delete(b,1,1)
>>> d
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> e=np.delete(d,range(1,4))
>>> e
array([  0,   5,   6,   7,   8,   9,  10,  12,  13,  14,  15,  16,  17,
        18,  19,  20,  22,  23,  24,  25,  26,  27,  28,  29,  30,  32,
        33,  34,  35,  36,  37,  38,  39,  40,  42,  43,  44,  45,  46,
        47,  48,  49,  50,  52,  53,  54,  55,  56,  57,  58,  59,  60,
        62,  63,  64,  65,  66,  67,  68,  69,  70,  72,  73,  74,  75,
        76,  77,  78,  79,  80,  82,  83,  84,  85,  86,  87,  88,  89,
        90,  92,  93,  94,  95,  96,  97,  98,  99, 100, 102, 103, 104,
       105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118,
       119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133,
       134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147,
       148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162,
       163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176,
       177, 178, 179])
>>> d=np.delete(b,1,1)
>>> d
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> e=np.delete(d,range(1,4),1)
>>> e
array([[  0,   5,   6,   7,   8,   9],
       [ 10,  15,  16,  17,  18,  19],
       [ 20,  25,  26,  27,  28,  29],
       [ 30,  35,  36,  37,  38,  39],
       [ 40,  45,  46,  47,  48,  49],
       [ 50,  55,  56,  57,  58,  59],
       [ 60,  65,  66,  67,  68,  69],
       [ 70,  75,  76,  77,  78,  79],
       [ 80,  85,  86,  87,  88,  89],
       [ 90,  95,  96,  97,  98,  99],
       [100, 105, 106, 107, 108, 109],
       [110, 115, 116, 117, 118, 119],
       [120, 125, 126, 127, 128, 129],
       [130, 135, 136, 137, 138, 139],
       [140, 145, 146, 147, 148, 149],
       [150, 155, 156, 157, 158, 159],
       [160, 165, 166, 167, 168, 169],
       [170, 175, 176, 177, 178, 179]])
>>> np.delete(a,np.arange(0,3),0)
array([  3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
        16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,
        29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,
        42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,
        55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,
        68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,
        81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  93,
        94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106,
       107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
       120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
       133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
       146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
       159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
       172, 173, 174, 175, 176, 177, 178, 179])
>>> d=np.delete(b,1,1)
>>> d
array([[  0,   2,   3,   4,   5,   6,   7,   8,   9],
       [ 10,  12,  13,  14,  15,  16,  17,  18,  19],
       [ 20,  22,  23,  24,  25,  26,  27,  28,  29],
       [ 30,  32,  33,  34,  35,  36,  37,  38,  39],
       [ 40,  42,  43,  44,  45,  46,  47,  48,  49],
       [ 50,  52,  53,  54,  55,  56,  57,  58,  59],
       [ 60,  62,  63,  64,  65,  66,  67,  68,  69],
       [ 70,  72,  73,  74,  75,  76,  77,  78,  79],
       [ 80,  82,  83,  84,  85,  86,  87,  88,  89],
       [ 90,  92,  93,  94,  95,  96,  97,  98,  99],
       [100, 102, 103, 104, 105, 106, 107, 108, 109],
       [110, 112, 113, 114, 115, 116, 117, 118, 119],
       [120, 122, 123, 124, 125, 126, 127, 128, 129],
       [130, 132, 133, 134, 135, 136, 137, 138, 139],
       [140, 142, 143, 144, 145, 146, 147, 148, 149],
       [150, 152, 153, 154, 155, 156, 157, 158, 159],
       [160, 162, 163, 164, 165, 166, 167, 168, 169],
       [170, 172, 173, 174, 175, 176, 177, 178, 179]])
>>> e=np.delete(a,np.arange(0,3),0)
>>> e
array([  3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
        16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,
        29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,
        42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,
        55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,
        68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,
        81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  93,
        94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106,
       107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
       120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
       133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
       146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
       159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
       172, 173, 174, 175, 176, 177, 178, 179])
>>> f=np.arange(90)
>>> f
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> g=f.reshape(3,6,5)
>>> g
array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9],
        [10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19],
        [20, 21, 22, 23, 24],
        [25, 26, 27, 28, 29]],

       [[30, 31, 32, 33, 34],
        [35, 36, 37, 38, 39],
        [40, 41, 42, 43, 44],
        [45, 46, 47, 48, 49],
        [50, 51, 52, 53, 54],
        [55, 56, 57, 58, 59]],

       [[60, 61, 62, 63, 64],
        [65, 66, 67, 68, 69],
        [70, 71, 72, 73, 74],
        [75, 76, 77, 78, 79],
        [80, 81, 82, 83, 84],
        [85, 86, 87, 88, 89]]])
>>> h=np.delete(g,4,3)
Traceback (most recent call last):
  File "<pyshell#187>", line 1, in <module>
    h=np.delete(g,4,3)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 3 is out of bounds for array of dimension 3
>>> h=np.delete(g,4,2)
>>> h
array([[[ 0,  1,  2,  3],
        [ 5,  6,  7,  8],
        [10, 11, 12, 13],
        [15, 16, 17, 18],
        [20, 21, 22, 23],
        [25, 26, 27, 28]],

       [[30, 31, 32, 33],
        [35, 36, 37, 38],
        [40, 41, 42, 43],
        [45, 46, 47, 48],
        [50, 51, 52, 53],
        [55, 56, 57, 58]],

       [[60, 61, 62, 63],
        [65, 66, 67, 68],
        [70, 71, 72, 73],
        [75, 76, 77, 78],
        [80, 81, 82, 83],
        [85, 86, 87, 88]]])
>>> i=np.delete(h,1,1)
>>> i
array([[[ 0,  1,  2,  3],
        [10, 11, 12, 13],
        [15, 16, 17, 18],
        [20, 21, 22, 23],
        [25, 26, 27, 28]],

       [[30, 31, 32, 33],
        [40, 41, 42, 43],
        [45, 46, 47, 48],
        [50, 51, 52, 53],
        [55, 56, 57, 58]],

       [[60, 61, 62, 63],
        [70, 71, 72, 73],
        [75, 76, 77, 78],
        [80, 81, 82, 83],
        [85, 86, 87, 88]]])
>>> f=np.arange(90)
>>> f
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89])
>>> f=np.arange(300)
>>> f
array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
       182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
       195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
       208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
       221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
       234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
       247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
       260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
       273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
       286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298,
       299])
>>> g=f.reshape(2,3,6,5)
Traceback (most recent call last):
  File "<pyshell#196>", line 1, in <module>
    g=f.reshape(2,3,6,5)
ValueError: cannot reshape array of size 300 into shape (2,3,6,5)
>>> f=np.arange(180)
>>> g=f.reshape(2,3,6,5)
>>> g
array([[[[  0,   1,   2,   3,   4],
         [  5,   6,   7,   8,   9],
         [ 10,  11,  12,  13,  14],
         [ 15,  16,  17,  18,  19],
         [ 20,  21,  22,  23,  24],
         [ 25,  26,  27,  28,  29]],

        [[ 30,  31,  32,  33,  34],
         [ 35,  36,  37,  38,  39],
         [ 40,  41,  42,  43,  44],
         [ 45,  46,  47,  48,  49],
         [ 50,  51,  52,  53,  54],
         [ 55,  56,  57,  58,  59]],

        [[ 60,  61,  62,  63,  64],
         [ 65,  66,  67,  68,  69],
         [ 70,  71,  72,  73,  74],
         [ 75,  76,  77,  78,  79],
         [ 80,  81,  82,  83,  84],
         [ 85,  86,  87,  88,  89]]],


       [[[ 90,  91,  92,  93,  94],
         [ 95,  96,  97,  98,  99],
         [100, 101, 102, 103, 104],
         [105, 106, 107, 108, 109],
         [110, 111, 112, 113, 114],
         [115, 116, 117, 118, 119]],

        [[120, 121, 122, 123, 124],
         [125, 126, 127, 128, 129],
         [130, 131, 132, 133, 134],
         [135, 136, 137, 138, 139],
         [140, 141, 142, 143, 144],
         [145, 146, 147, 148, 149]],

        [[150, 151, 152, 153, 154],
         [155, 156, 157, 158, 159],
         [160, 161, 162, 163, 164],
         [165, 166, 167, 168, 169],
         [170, 171, 172, 173, 174],
         [175, 176, 177, 178, 179]]]])
>>> h=np.delete(g,1,0,3)
Traceback (most recent call last):
  File "<pyshell#200>", line 1, in <module>
    h=np.delete(g,1,0,3)
TypeError: delete() takes from 2 to 3 positional arguments but 4 were given
>>> h=np.delete(g,1,,3)
SyntaxError: invalid syntax
>>> h=np.delete(g,1,3)
>>> h
array([[[[  0,   2,   3,   4],
         [  5,   7,   8,   9],
         [ 10,  12,  13,  14],
         [ 15,  17,  18,  19],
         [ 20,  22,  23,  24],
         [ 25,  27,  28,  29]],

        [[ 30,  32,  33,  34],
         [ 35,  37,  38,  39],
         [ 40,  42,  43,  44],
         [ 45,  47,  48,  49],
         [ 50,  52,  53,  54],
         [ 55,  57,  58,  59]],

        [[ 60,  62,  63,  64],
         [ 65,  67,  68,  69],
         [ 70,  72,  73,  74],
         [ 75,  77,  78,  79],
         [ 80,  82,  83,  84],
         [ 85,  87,  88,  89]]],


       [[[ 90,  92,  93,  94],
         [ 95,  97,  98,  99],
         [100, 102, 103, 104],
         [105, 107, 108, 109],
         [110, 112, 113, 114],
         [115, 117, 118, 119]],

        [[120, 122, 123, 124],
         [125, 127, 128, 129],
         [130, 132, 133, 134],
         [135, 137, 138, 139],
         [140, 142, 143, 144],
         [145, 147, 148, 149]],

        [[150, 152, 153, 154],
         [155, 157, 158, 159],
         [160, 162, 163, 164],
         [165, 167, 168, 169],
         [170, 172, 173, 174],
         [175, 177, 178, 179]]]])
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 




>>> np.delete(a,0,3)
Traceback (most recent call last):
  File "<pyshell#212>", line 1, in <module>
    np.delete(a,0,3)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 3 is out of bounds for array of dimension 1
>>> 
>>> a=np.range(1440)
Traceback (most recent call last):
  File "<pyshell#214>", line 1, in <module>
    a=np.range(1440)
AttributeError: module 'numpy' has no attribute 'range'
>>> a=np.arange(1440)
>>> a
array([   0,    1,    2, ..., 1437, 1438, 1439])
>>> a.reshape(2,5,4,6,6)
array([[[[[   0,    1,    2,    3,    4,    5],
          [   6,    7,    8,    9,   10,   11],
          [  12,   13,   14,   15,   16,   17],
          [  18,   19,   20,   21,   22,   23],
          [  24,   25,   26,   27,   28,   29],
          [  30,   31,   32,   33,   34,   35]],

         [[  36,   37,   38,   39,   40,   41],
          [  42,   43,   44,   45,   46,   47],
          [  48,   49,   50,   51,   52,   53],
          [  54,   55,   56,   57,   58,   59],
          [  60,   61,   62,   63,   64,   65],
          [  66,   67,   68,   69,   70,   71]],

         [[  72,   73,   74,   75,   76,   77],
          [  78,   79,   80,   81,   82,   83],
          [  84,   85,   86,   87,   88,   89],
          [  90,   91,   92,   93,   94,   95],
          [  96,   97,   98,   99,  100,  101],
          [ 102,  103,  104,  105,  106,  107]],

         [[ 108,  109,  110,  111,  112,  113],
          [ 114,  115,  116,  117,  118,  119],
          [ 120,  121,  122,  123,  124,  125],
          [ 126,  127,  128,  129,  130,  131],
          [ 132,  133,  134,  135,  136,  137],
          [ 138,  139,  140,  141,  142,  143]]],


        [[[ 144,  145,  146,  147,  148,  149],
          [ 150,  151,  152,  153,  154,  155],
          [ 156,  157,  158,  159,  160,  161],
          [ 162,  163,  164,  165,  166,  167],
          [ 168,  169,  170,  171,  172,  173],
          [ 174,  175,  176,  177,  178,  179]],

         [[ 180,  181,  182,  183,  184,  185],
          [ 186,  187,  188,  189,  190,  191],
          [ 192,  193,  194,  195,  196,  197],
          [ 198,  199,  200,  201,  202,  203],
          [ 204,  205,  206,  207,  208,  209],
          [ 210,  211,  212,  213,  214,  215]],

         [[ 216,  217,  218,  219,  220,  221],
          [ 222,  223,  224,  225,  226,  227],
          [ 228,  229,  230,  231,  232,  233],
          [ 234,  235,  236,  237,  238,  239],
          [ 240,  241,  242,  243,  244,  245],
          [ 246,  247,  248,  249,  250,  251]],

         [[ 252,  253,  254,  255,  256,  257],
          [ 258,  259,  260,  261,  262,  263],
          [ 264,  265,  266,  267,  268,  269],
          [ 270,  271,  272,  273,  274,  275],
          [ 276,  277,  278,  279,  280,  281],
          [ 282,  283,  284,  285,  286,  287]]],


        [[[ 288,  289,  290,  291,  292,  293],
          [ 294,  295,  296,  297,  298,  299],
          [ 300,  301,  302,  303,  304,  305],
          [ 306,  307,  308,  309,  310,  311],
          [ 312,  313,  314,  315,  316,  317],
          [ 318,  319,  320,  321,  322,  323]],

         [[ 324,  325,  326,  327,  328,  329],
          [ 330,  331,  332,  333,  334,  335],
          [ 336,  337,  338,  339,  340,  341],
          [ 342,  343,  344,  345,  346,  347],
          [ 348,  349,  350,  351,  352,  353],
          [ 354,  355,  356,  357,  358,  359]],

         [[ 360,  361,  362,  363,  364,  365],
          [ 366,  367,  368,  369,  370,  371],
          [ 372,  373,  374,  375,  376,  377],
          [ 378,  379,  380,  381,  382,  383],
          [ 384,  385,  386,  387,  388,  389],
          [ 390,  391,  392,  393,  394,  395]],

         [[ 396,  397,  398,  399,  400,  401],
          [ 402,  403,  404,  405,  406,  407],
          [ 408,  409,  410,  411,  412,  413],
          [ 414,  415,  416,  417,  418,  419],
          [ 420,  421,  422,  423,  424,  425],
          [ 426,  427,  428,  429,  430,  431]]],


        [[[ 432,  433,  434,  435,  436,  437],
          [ 438,  439,  440,  441,  442,  443],
          [ 444,  445,  446,  447,  448,  449],
          [ 450,  451,  452,  453,  454,  455],
          [ 456,  457,  458,  459,  460,  461],
          [ 462,  463,  464,  465,  466,  467]],

         [[ 468,  469,  470,  471,  472,  473],
          [ 474,  475,  476,  477,  478,  479],
          [ 480,  481,  482,  483,  484,  485],
          [ 486,  487,  488,  489,  490,  491],
          [ 492,  493,  494,  495,  496,  497],
          [ 498,  499,  500,  501,  502,  503]],

         [[ 504,  505,  506,  507,  508,  509],
          [ 510,  511,  512,  513,  514,  515],
          [ 516,  517,  518,  519,  520,  521],
          [ 522,  523,  524,  525,  526,  527],
          [ 528,  529,  530,  531,  532,  533],
          [ 534,  535,  536,  537,  538,  539]],

         [[ 540,  541,  542,  543,  544,  545],
          [ 546,  547,  548,  549,  550,  551],
          [ 552,  553,  554,  555,  556,  557],
          [ 558,  559,  560,  561,  562,  563],
          [ 564,  565,  566,  567,  568,  569],
          [ 570,  571,  572,  573,  574,  575]]],


        [[[ 576,  577,  578,  579,  580,  581],
          [ 582,  583,  584,  585,  586,  587],
          [ 588,  589,  590,  591,  592,  593],
          [ 594,  595,  596,  597,  598,  599],
          [ 600,  601,  602,  603,  604,  605],
          [ 606,  607,  608,  609,  610,  611]],

         [[ 612,  613,  614,  615,  616,  617],
          [ 618,  619,  620,  621,  622,  623],
          [ 624,  625,  626,  627,  628,  629],
          [ 630,  631,  632,  633,  634,  635],
          [ 636,  637,  638,  639,  640,  641],
          [ 642,  643,  644,  645,  646,  647]],

         [[ 648,  649,  650,  651,  652,  653],
          [ 654,  655,  656,  657,  658,  659],
          [ 660,  661,  662,  663,  664,  665],
          [ 666,  667,  668,  669,  670,  671],
          [ 672,  673,  674,  675,  676,  677],
          [ 678,  679,  680,  681,  682,  683]],

         [[ 684,  685,  686,  687,  688,  689],
          [ 690,  691,  692,  693,  694,  695],
          [ 696,  697,  698,  699,  700,  701],
          [ 702,  703,  704,  705,  706,  707],
          [ 708,  709,  710,  711,  712,  713],
          [ 714,  715,  716,  717,  718,  719]]]],



       [[[[ 720,  721,  722,  723,  724,  725],
          [ 726,  727,  728,  729,  730,  731],
          [ 732,  733,  734,  735,  736,  737],
          [ 738,  739,  740,  741,  742,  743],
          [ 744,  745,  746,  747,  748,  749],
          [ 750,  751,  752,  753,  754,  755]],

         [[ 756,  757,  758,  759,  760,  761],
          [ 762,  763,  764,  765,  766,  767],
          [ 768,  769,  770,  771,  772,  773],
          [ 774,  775,  776,  777,  778,  779],
          [ 780,  781,  782,  783,  784,  785],
          [ 786,  787,  788,  789,  790,  791]],

         [[ 792,  793,  794,  795,  796,  797],
          [ 798,  799,  800,  801,  802,  803],
          [ 804,  805,  806,  807,  808,  809],
          [ 810,  811,  812,  813,  814,  815],
          [ 816,  817,  818,  819,  820,  821],
          [ 822,  823,  824,  825,  826,  827]],

         [[ 828,  829,  830,  831,  832,  833],
          [ 834,  835,  836,  837,  838,  839],
          [ 840,  841,  842,  843,  844,  845],
          [ 846,  847,  848,  849,  850,  851],
          [ 852,  853,  854,  855,  856,  857],
          [ 858,  859,  860,  861,  862,  863]]],


        [[[ 864,  865,  866,  867,  868,  869],
          [ 870,  871,  872,  873,  874,  875],
          [ 876,  877,  878,  879,  880,  881],
          [ 882,  883,  884,  885,  886,  887],
          [ 888,  889,  890,  891,  892,  893],
          [ 894,  895,  896,  897,  898,  899]],

         [[ 900,  901,  902,  903,  904,  905],
          [ 906,  907,  908,  909,  910,  911],
          [ 912,  913,  914,  915,  916,  917],
          [ 918,  919,  920,  921,  922,  923],
          [ 924,  925,  926,  927,  928,  929],
          [ 930,  931,  932,  933,  934,  935]],

         [[ 936,  937,  938,  939,  940,  941],
          [ 942,  943,  944,  945,  946,  947],
          [ 948,  949,  950,  951,  952,  953],
          [ 954,  955,  956,  957,  958,  959],
          [ 960,  961,  962,  963,  964,  965],
          [ 966,  967,  968,  969,  970,  971]],

         [[ 972,  973,  974,  975,  976,  977],
          [ 978,  979,  980,  981,  982,  983],
          [ 984,  985,  986,  987,  988,  989],
          [ 990,  991,  992,  993,  994,  995],
          [ 996,  997,  998,  999, 1000, 1001],
          [1002, 1003, 1004, 1005, 1006, 1007]]],


        [[[1008, 1009, 1010, 1011, 1012, 1013],
          [1014, 1015, 1016, 1017, 1018, 1019],
          [1020, 1021, 1022, 1023, 1024, 1025],
          [1026, 1027, 1028, 1029, 1030, 1031],
          [1032, 1033, 1034, 1035, 1036, 1037],
          [1038, 1039, 1040, 1041, 1042, 1043]],

         [[1044, 1045, 1046, 1047, 1048, 1049],
          [1050, 1051, 1052, 1053, 1054, 1055],
          [1056, 1057, 1058, 1059, 1060, 1061],
          [1062, 1063, 1064, 1065, 1066, 1067],
          [1068, 1069, 1070, 1071, 1072, 1073],
          [1074, 1075, 1076, 1077, 1078, 1079]],

         [[1080, 1081, 1082, 1083, 1084, 1085],
          [1086, 1087, 1088, 1089, 1090, 1091],
          [1092, 1093, 1094, 1095, 1096, 1097],
          [1098, 1099, 1100, 1101, 1102, 1103],
          [1104, 1105, 1106, 1107, 1108, 1109],
          [1110, 1111, 1112, 1113, 1114, 1115]],

         [[1116, 1117, 1118, 1119, 1120, 1121],
          [1122, 1123, 1124, 1125, 1126, 1127],
          [1128, 1129, 1130, 1131, 1132, 1133],
          [1134, 1135, 1136, 1137, 1138, 1139],
          [1140, 1141, 1142, 1143, 1144, 1145],
          [1146, 1147, 1148, 1149, 1150, 1151]]],


        [[[1152, 1153, 1154, 1155, 1156, 1157],
          [1158, 1159, 1160, 1161, 1162, 1163],
          [1164, 1165, 1166, 1167, 1168, 1169],
          [1170, 1171, 1172, 1173, 1174, 1175],
          [1176, 1177, 1178, 1179, 1180, 1181],
          [1182, 1183, 1184, 1185, 1186, 1187]],

         [[1188, 1189, 1190, 1191, 1192, 1193],
          [1194, 1195, 1196, 1197, 1198, 1199],
          [1200, 1201, 1202, 1203, 1204, 1205],
          [1206, 1207, 1208, 1209, 1210, 1211],
          [1212, 1213, 1214, 1215, 1216, 1217],
          [1218, 1219, 1220, 1221, 1222, 1223]],

         [[1224, 1225, 1226, 1227, 1228, 1229],
          [1230, 1231, 1232, 1233, 1234, 1235],
          [1236, 1237, 1238, 1239, 1240, 1241],
          [1242, 1243, 1244, 1245, 1246, 1247],
          [1248, 1249, 1250, 1251, 1252, 1253],
          [1254, 1255, 1256, 1257, 1258, 1259]],

         [[1260, 1261, 1262, 1263, 1264, 1265],
          [1266, 1267, 1268, 1269, 1270, 1271],
          [1272, 1273, 1274, 1275, 1276, 1277],
          [1278, 1279, 1280, 1281, 1282, 1283],
          [1284, 1285, 1286, 1287, 1288, 1289],
          [1290, 1291, 1292, 1293, 1294, 1295]]],


        [[[1296, 1297, 1298, 1299, 1300, 1301],
          [1302, 1303, 1304, 1305, 1306, 1307],
          [1308, 1309, 1310, 1311, 1312, 1313],
          [1314, 1315, 1316, 1317, 1318, 1319],
          [1320, 1321, 1322, 1323, 1324, 1325],
          [1326, 1327, 1328, 1329, 1330, 1331]],

         [[1332, 1333, 1334, 1335, 1336, 1337],
          [1338, 1339, 1340, 1341, 1342, 1343],
          [1344, 1345, 1346, 1347, 1348, 1349],
          [1350, 1351, 1352, 1353, 1354, 1355],
          [1356, 1357, 1358, 1359, 1360, 1361],
          [1362, 1363, 1364, 1365, 1366, 1367]],

         [[1368, 1369, 1370, 1371, 1372, 1373],
          [1374, 1375, 1376, 1377, 1378, 1379],
          [1380, 1381, 1382, 1383, 1384, 1385],
          [1386, 1387, 1388, 1389, 1390, 1391],
          [1392, 1393, 1394, 1395, 1396, 1397],
          [1398, 1399, 1400, 1401, 1402, 1403]],

         [[1404, 1405, 1406, 1407, 1408, 1409],
          [1410, 1411, 1412, 1413, 1414, 1415],
          [1416, 1417, 1418, 1419, 1420, 1421],
          [1422, 1423, 1424, 1425, 1426, 1427],
          [1428, 1429, 1430, 1431, 1432, 1433],
          [1434, 1435, 1436, 1437, 1438, 1439]]]]])
>>> a=np.arange(1440).reshape(2,4,5,6,6)
>>> a
array([[[[[   0,    1,    2,    3,    4,    5],
          [   6,    7,    8,    9,   10,   11],
          [  12,   13,   14,   15,   16,   17],
          [  18,   19,   20,   21,   22,   23],
          [  24,   25,   26,   27,   28,   29],
          [  30,   31,   32,   33,   34,   35]],

         [[  36,   37,   38,   39,   40,   41],
          [  42,   43,   44,   45,   46,   47],
          [  48,   49,   50,   51,   52,   53],
          [  54,   55,   56,   57,   58,   59],
          [  60,   61,   62,   63,   64,   65],
          [  66,   67,   68,   69,   70,   71]],

         [[  72,   73,   74,   75,   76,   77],
          [  78,   79,   80,   81,   82,   83],
          [  84,   85,   86,   87,   88,   89],
          [  90,   91,   92,   93,   94,   95],
          [  96,   97,   98,   99,  100,  101],
          [ 102,  103,  104,  105,  106,  107]],

         [[ 108,  109,  110,  111,  112,  113],
          [ 114,  115,  116,  117,  118,  119],
          [ 120,  121,  122,  123,  124,  125],
          [ 126,  127,  128,  129,  130,  131],
          [ 132,  133,  134,  135,  136,  137],
          [ 138,  139,  140,  141,  142,  143]],

         [[ 144,  145,  146,  147,  148,  149],
          [ 150,  151,  152,  153,  154,  155],
          [ 156,  157,  158,  159,  160,  161],
          [ 162,  163,  164,  165,  166,  167],
          [ 168,  169,  170,  171,  172,  173],
          [ 174,  175,  176,  177,  178,  179]]],


        [[[ 180,  181,  182,  183,  184,  185],
          [ 186,  187,  188,  189,  190,  191],
          [ 192,  193,  194,  195,  196,  197],
          [ 198,  199,  200,  201,  202,  203],
          [ 204,  205,  206,  207,  208,  209],
          [ 210,  211,  212,  213,  214,  215]],

         [[ 216,  217,  218,  219,  220,  221],
          [ 222,  223,  224,  225,  226,  227],
          [ 228,  229,  230,  231,  232,  233],
          [ 234,  235,  236,  237,  238,  239],
          [ 240,  241,  242,  243,  244,  245],
          [ 246,  247,  248,  249,  250,  251]],

         [[ 252,  253,  254,  255,  256,  257],
          [ 258,  259,  260,  261,  262,  263],
          [ 264,  265,  266,  267,  268,  269],
          [ 270,  271,  272,  273,  274,  275],
          [ 276,  277,  278,  279,  280,  281],
          [ 282,  283,  284,  285,  286,  287]],

         [[ 288,  289,  290,  291,  292,  293],
          [ 294,  295,  296,  297,  298,  299],
          [ 300,  301,  302,  303,  304,  305],
          [ 306,  307,  308,  309,  310,  311],
          [ 312,  313,  314,  315,  316,  317],
          [ 318,  319,  320,  321,  322,  323]],

         [[ 324,  325,  326,  327,  328,  329],
          [ 330,  331,  332,  333,  334,  335],
          [ 336,  337,  338,  339,  340,  341],
          [ 342,  343,  344,  345,  346,  347],
          [ 348,  349,  350,  351,  352,  353],
          [ 354,  355,  356,  357,  358,  359]]],


        [[[ 360,  361,  362,  363,  364,  365],
          [ 366,  367,  368,  369,  370,  371],
          [ 372,  373,  374,  375,  376,  377],
          [ 378,  379,  380,  381,  382,  383],
          [ 384,  385,  386,  387,  388,  389],
          [ 390,  391,  392,  393,  394,  395]],

         [[ 396,  397,  398,  399,  400,  401],
          [ 402,  403,  404,  405,  406,  407],
          [ 408,  409,  410,  411,  412,  413],
          [ 414,  415,  416,  417,  418,  419],
          [ 420,  421,  422,  423,  424,  425],
          [ 426,  427,  428,  429,  430,  431]],

         [[ 432,  433,  434,  435,  436,  437],
          [ 438,  439,  440,  441,  442,  443],
          [ 444,  445,  446,  447,  448,  449],
          [ 450,  451,  452,  453,  454,  455],
          [ 456,  457,  458,  459,  460,  461],
          [ 462,  463,  464,  465,  466,  467]],

         [[ 468,  469,  470,  471,  472,  473],
          [ 474,  475,  476,  477,  478,  479],
          [ 480,  481,  482,  483,  484,  485],
          [ 486,  487,  488,  489,  490,  491],
          [ 492,  493,  494,  495,  496,  497],
          [ 498,  499,  500,  501,  502,  503]],

         [[ 504,  505,  506,  507,  508,  509],
          [ 510,  511,  512,  513,  514,  515],
          [ 516,  517,  518,  519,  520,  521],
          [ 522,  523,  524,  525,  526,  527],
          [ 528,  529,  530,  531,  532,  533],
          [ 534,  535,  536,  537,  538,  539]]],


        [[[ 540,  541,  542,  543,  544,  545],
          [ 546,  547,  548,  549,  550,  551],
          [ 552,  553,  554,  555,  556,  557],
          [ 558,  559,  560,  561,  562,  563],
          [ 564,  565,  566,  567,  568,  569],
          [ 570,  571,  572,  573,  574,  575]],

         [[ 576,  577,  578,  579,  580,  581],
          [ 582,  583,  584,  585,  586,  587],
          [ 588,  589,  590,  591,  592,  593],
          [ 594,  595,  596,  597,  598,  599],
          [ 600,  601,  602,  603,  604,  605],
          [ 606,  607,  608,  609,  610,  611]],

         [[ 612,  613,  614,  615,  616,  617],
          [ 618,  619,  620,  621,  622,  623],
          [ 624,  625,  626,  627,  628,  629],
          [ 630,  631,  632,  633,  634,  635],
          [ 636,  637,  638,  639,  640,  641],
          [ 642,  643,  644,  645,  646,  647]],

         [[ 648,  649,  650,  651,  652,  653],
          [ 654,  655,  656,  657,  658,  659],
          [ 660,  661,  662,  663,  664,  665],
          [ 666,  667,  668,  669,  670,  671],
          [ 672,  673,  674,  675,  676,  677],
          [ 678,  679,  680,  681,  682,  683]],

         [[ 684,  685,  686,  687,  688,  689],
          [ 690,  691,  692,  693,  694,  695],
          [ 696,  697,  698,  699,  700,  701],
          [ 702,  703,  704,  705,  706,  707],
          [ 708,  709,  710,  711,  712,  713],
          [ 714,  715,  716,  717,  718,  719]]]],



       [[[[ 720,  721,  722,  723,  724,  725],
          [ 726,  727,  728,  729,  730,  731],
          [ 732,  733,  734,  735,  736,  737],
          [ 738,  739,  740,  741,  742,  743],
          [ 744,  745,  746,  747,  748,  749],
          [ 750,  751,  752,  753,  754,  755]],

         [[ 756,  757,  758,  759,  760,  761],
          [ 762,  763,  764,  765,  766,  767],
          [ 768,  769,  770,  771,  772,  773],
          [ 774,  775,  776,  777,  778,  779],
          [ 780,  781,  782,  783,  784,  785],
          [ 786,  787,  788,  789,  790,  791]],

         [[ 792,  793,  794,  795,  796,  797],
          [ 798,  799,  800,  801,  802,  803],
          [ 804,  805,  806,  807,  808,  809],
          [ 810,  811,  812,  813,  814,  815],
          [ 816,  817,  818,  819,  820,  821],
          [ 822,  823,  824,  825,  826,  827]],

         [[ 828,  829,  830,  831,  832,  833],
          [ 834,  835,  836,  837,  838,  839],
          [ 840,  841,  842,  843,  844,  845],
          [ 846,  847,  848,  849,  850,  851],
          [ 852,  853,  854,  855,  856,  857],
          [ 858,  859,  860,  861,  862,  863]],

         [[ 864,  865,  866,  867,  868,  869],
          [ 870,  871,  872,  873,  874,  875],
          [ 876,  877,  878,  879,  880,  881],
          [ 882,  883,  884,  885,  886,  887],
          [ 888,  889,  890,  891,  892,  893],
          [ 894,  895,  896,  897,  898,  899]]],


        [[[ 900,  901,  902,  903,  904,  905],
          [ 906,  907,  908,  909,  910,  911],
          [ 912,  913,  914,  915,  916,  917],
          [ 918,  919,  920,  921,  922,  923],
          [ 924,  925,  926,  927,  928,  929],
          [ 930,  931,  932,  933,  934,  935]],

         [[ 936,  937,  938,  939,  940,  941],
          [ 942,  943,  944,  945,  946,  947],
          [ 948,  949,  950,  951,  952,  953],
          [ 954,  955,  956,  957,  958,  959],
          [ 960,  961,  962,  963,  964,  965],
          [ 966,  967,  968,  969,  970,  971]],

         [[ 972,  973,  974,  975,  976,  977],
          [ 978,  979,  980,  981,  982,  983],
          [ 984,  985,  986,  987,  988,  989],
          [ 990,  991,  992,  993,  994,  995],
          [ 996,  997,  998,  999, 1000, 1001],
          [1002, 1003, 1004, 1005, 1006, 1007]],

         [[1008, 1009, 1010, 1011, 1012, 1013],
          [1014, 1015, 1016, 1017, 1018, 1019],
          [1020, 1021, 1022, 1023, 1024, 1025],
          [1026, 1027, 1028, 1029, 1030, 1031],
          [1032, 1033, 1034, 1035, 1036, 1037],
          [1038, 1039, 1040, 1041, 1042, 1043]],

         [[1044, 1045, 1046, 1047, 1048, 1049],
          [1050, 1051, 1052, 1053, 1054, 1055],
          [1056, 1057, 1058, 1059, 1060, 1061],
          [1062, 1063, 1064, 1065, 1066, 1067],
          [1068, 1069, 1070, 1071, 1072, 1073],
          [1074, 1075, 1076, 1077, 1078, 1079]]],


        [[[1080, 1081, 1082, 1083, 1084, 1085],
          [1086, 1087, 1088, 1089, 1090, 1091],
          [1092, 1093, 1094, 1095, 1096, 1097],
          [1098, 1099, 1100, 1101, 1102, 1103],
          [1104, 1105, 1106, 1107, 1108, 1109],
          [1110, 1111, 1112, 1113, 1114, 1115]],

         [[1116, 1117, 1118, 1119, 1120, 1121],
          [1122, 1123, 1124, 1125, 1126, 1127],
          [1128, 1129, 1130, 1131, 1132, 1133],
          [1134, 1135, 1136, 1137, 1138, 1139],
          [1140, 1141, 1142, 1143, 1144, 1145],
          [1146, 1147, 1148, 1149, 1150, 1151]],

         [[1152, 1153, 1154, 1155, 1156, 1157],
          [1158, 1159, 1160, 1161, 1162, 1163],
          [1164, 1165, 1166, 1167, 1168, 1169],
          [1170, 1171, 1172, 1173, 1174, 1175],
          [1176, 1177, 1178, 1179, 1180, 1181],
          [1182, 1183, 1184, 1185, 1186, 1187]],

         [[1188, 1189, 1190, 1191, 1192, 1193],
          [1194, 1195, 1196, 1197, 1198, 1199],
          [1200, 1201, 1202, 1203, 1204, 1205],
          [1206, 1207, 1208, 1209, 1210, 1211],
          [1212, 1213, 1214, 1215, 1216, 1217],
          [1218, 1219, 1220, 1221, 1222, 1223]],

         [[1224, 1225, 1226, 1227, 1228, 1229],
          [1230, 1231, 1232, 1233, 1234, 1235],
          [1236, 1237, 1238, 1239, 1240, 1241],
          [1242, 1243, 1244, 1245, 1246, 1247],
          [1248, 1249, 1250, 1251, 1252, 1253],
          [1254, 1255, 1256, 1257, 1258, 1259]]],


        [[[1260, 1261, 1262, 1263, 1264, 1265],
          [1266, 1267, 1268, 1269, 1270, 1271],
          [1272, 1273, 1274, 1275, 1276, 1277],
          [1278, 1279, 1280, 1281, 1282, 1283],
          [1284, 1285, 1286, 1287, 1288, 1289],
          [1290, 1291, 1292, 1293, 1294, 1295]],

         [[1296, 1297, 1298, 1299, 1300, 1301],
          [1302, 1303, 1304, 1305, 1306, 1307],
          [1308, 1309, 1310, 1311, 1312, 1313],
          [1314, 1315, 1316, 1317, 1318, 1319],
          [1320, 1321, 1322, 1323, 1324, 1325],
          [1326, 1327, 1328, 1329, 1330, 1331]],

         [[1332, 1333, 1334, 1335, 1336, 1337],
          [1338, 1339, 1340, 1341, 1342, 1343],
          [1344, 1345, 1346, 1347, 1348, 1349],
          [1350, 1351, 1352, 1353, 1354, 1355],
          [1356, 1357, 1358, 1359, 1360, 1361],
          [1362, 1363, 1364, 1365, 1366, 1367]],

         [[1368, 1369, 1370, 1371, 1372, 1373],
          [1374, 1375, 1376, 1377, 1378, 1379],
          [1380, 1381, 1382, 1383, 1384, 1385],
          [1386, 1387, 1388, 1389, 1390, 1391],
          [1392, 1393, 1394, 1395, 1396, 1397],
          [1398, 1399, 1400, 1401, 1402, 1403]],

         [[1404, 1405, 1406, 1407, 1408, 1409],
          [1410, 1411, 1412, 1413, 1414, 1415],
          [1416, 1417, 1418, 1419, 1420, 1421],
          [1422, 1423, 1424, 1425, 1426, 1427],
          [1428, 1429, 1430, 1431, 1432, 1433],
          [1434, 1435, 1436, 1437, 1438, 1439]]]]])
>>> b=np.delete(a,0,3)
>>> b
array([[[[[   6,    7,    8,    9,   10,   11],
          [  12,   13,   14,   15,   16,   17],
          [  18,   19,   20,   21,   22,   23],
          [  24,   25,   26,   27,   28,   29],
          [  30,   31,   32,   33,   34,   35]],

         [[  42,   43,   44,   45,   46,   47],
          [  48,   49,   50,   51,   52,   53],
          [  54,   55,   56,   57,   58,   59],
          [  60,   61,   62,   63,   64,   65],
          [  66,   67,   68,   69,   70,   71]],

         [[  78,   79,   80,   81,   82,   83],
          [  84,   85,   86,   87,   88,   89],
          [  90,   91,   92,   93,   94,   95],
          [  96,   97,   98,   99,  100,  101],
          [ 102,  103,  104,  105,  106,  107]],

         [[ 114,  115,  116,  117,  118,  119],
          [ 120,  121,  122,  123,  124,  125],
          [ 126,  127,  128,  129,  130,  131],
          [ 132,  133,  134,  135,  136,  137],
          [ 138,  139,  140,  141,  142,  143]],

         [[ 150,  151,  152,  153,  154,  155],
          [ 156,  157,  158,  159,  160,  161],
          [ 162,  163,  164,  165,  166,  167],
          [ 168,  169,  170,  171,  172,  173],
          [ 174,  175,  176,  177,  178,  179]]],


        [[[ 186,  187,  188,  189,  190,  191],
          [ 192,  193,  194,  195,  196,  197],
          [ 198,  199,  200,  201,  202,  203],
          [ 204,  205,  206,  207,  208,  209],
          [ 210,  211,  212,  213,  214,  215]],

         [[ 222,  223,  224,  225,  226,  227],
          [ 228,  229,  230,  231,  232,  233],
          [ 234,  235,  236,  237,  238,  239],
          [ 240,  241,  242,  243,  244,  245],
          [ 246,  247,  248,  249,  250,  251]],

         [[ 258,  259,  260,  261,  262,  263],
          [ 264,  265,  266,  267,  268,  269],
          [ 270,  271,  272,  273,  274,  275],
          [ 276,  277,  278,  279,  280,  281],
          [ 282,  283,  284,  285,  286,  287]],

         [[ 294,  295,  296,  297,  298,  299],
          [ 300,  301,  302,  303,  304,  305],
          [ 306,  307,  308,  309,  310,  311],
          [ 312,  313,  314,  315,  316,  317],
          [ 318,  319,  320,  321,  322,  323]],

         [[ 330,  331,  332,  333,  334,  335],
          [ 336,  337,  338,  339,  340,  341],
          [ 342,  343,  344,  345,  346,  347],
          [ 348,  349,  350,  351,  352,  353],
          [ 354,  355,  356,  357,  358,  359]]],


        [[[ 366,  367,  368,  369,  370,  371],
          [ 372,  373,  374,  375,  376,  377],
          [ 378,  379,  380,  381,  382,  383],
          [ 384,  385,  386,  387,  388,  389],
          [ 390,  391,  392,  393,  394,  395]],

         [[ 402,  403,  404,  405,  406,  407],
          [ 408,  409,  410,  411,  412,  413],
          [ 414,  415,  416,  417,  418,  419],
          [ 420,  421,  422,  423,  424,  425],
          [ 426,  427,  428,  429,  430,  431]],

         [[ 438,  439,  440,  441,  442,  443],
          [ 444,  445,  446,  447,  448,  449],
          [ 450,  451,  452,  453,  454,  455],
          [ 456,  457,  458,  459,  460,  461],
          [ 462,  463,  464,  465,  466,  467]],

         [[ 474,  475,  476,  477,  478,  479],
          [ 480,  481,  482,  483,  484,  485],
          [ 486,  487,  488,  489,  490,  491],
          [ 492,  493,  494,  495,  496,  497],
          [ 498,  499,  500,  501,  502,  503]],

         [[ 510,  511,  512,  513,  514,  515],
          [ 516,  517,  518,  519,  520,  521],
          [ 522,  523,  524,  525,  526,  527],
          [ 528,  529,  530,  531,  532,  533],
          [ 534,  535,  536,  537,  538,  539]]],


        [[[ 546,  547,  548,  549,  550,  551],
          [ 552,  553,  554,  555,  556,  557],
          [ 558,  559,  560,  561,  562,  563],
          [ 564,  565,  566,  567,  568,  569],
          [ 570,  571,  572,  573,  574,  575]],

         [[ 582,  583,  584,  585,  586,  587],
          [ 588,  589,  590,  591,  592,  593],
          [ 594,  595,  596,  597,  598,  599],
          [ 600,  601,  602,  603,  604,  605],
          [ 606,  607,  608,  609,  610,  611]],

         [[ 618,  619,  620,  621,  622,  623],
          [ 624,  625,  626,  627,  628,  629],
          [ 630,  631,  632,  633,  634,  635],
          [ 636,  637,  638,  639,  640,  641],
          [ 642,  643,  644,  645,  646,  647]],

         [[ 654,  655,  656,  657,  658,  659],
          [ 660,  661,  662,  663,  664,  665],
          [ 666,  667,  668,  669,  670,  671],
          [ 672,  673,  674,  675,  676,  677],
          [ 678,  679,  680,  681,  682,  683]],

         [[ 690,  691,  692,  693,  694,  695],
          [ 696,  697,  698,  699,  700,  701],
          [ 702,  703,  704,  705,  706,  707],
          [ 708,  709,  710,  711,  712,  713],
          [ 714,  715,  716,  717,  718,  719]]]],



       [[[[ 726,  727,  728,  729,  730,  731],
          [ 732,  733,  734,  735,  736,  737],
          [ 738,  739,  740,  741,  742,  743],
          [ 744,  745,  746,  747,  748,  749],
          [ 750,  751,  752,  753,  754,  755]],

         [[ 762,  763,  764,  765,  766,  767],
          [ 768,  769,  770,  771,  772,  773],
          [ 774,  775,  776,  777,  778,  779],
          [ 780,  781,  782,  783,  784,  785],
          [ 786,  787,  788,  789,  790,  791]],

         [[ 798,  799,  800,  801,  802,  803],
          [ 804,  805,  806,  807,  808,  809],
          [ 810,  811,  812,  813,  814,  815],
          [ 816,  817,  818,  819,  820,  821],
          [ 822,  823,  824,  825,  826,  827]],

         [[ 834,  835,  836,  837,  838,  839],
          [ 840,  841,  842,  843,  844,  845],
          [ 846,  847,  848,  849,  850,  851],
          [ 852,  853,  854,  855,  856,  857],
          [ 858,  859,  860,  861,  862,  863]],

         [[ 870,  871,  872,  873,  874,  875],
          [ 876,  877,  878,  879,  880,  881],
          [ 882,  883,  884,  885,  886,  887],
          [ 888,  889,  890,  891,  892,  893],
          [ 894,  895,  896,  897,  898,  899]]],


        [[[ 906,  907,  908,  909,  910,  911],
          [ 912,  913,  914,  915,  916,  917],
          [ 918,  919,  920,  921,  922,  923],
          [ 924,  925,  926,  927,  928,  929],
          [ 930,  931,  932,  933,  934,  935]],

         [[ 942,  943,  944,  945,  946,  947],
          [ 948,  949,  950,  951,  952,  953],
          [ 954,  955,  956,  957,  958,  959],
          [ 960,  961,  962,  963,  964,  965],
          [ 966,  967,  968,  969,  970,  971]],

         [[ 978,  979,  980,  981,  982,  983],
          [ 984,  985,  986,  987,  988,  989],
          [ 990,  991,  992,  993,  994,  995],
          [ 996,  997,  998,  999, 1000, 1001],
          [1002, 1003, 1004, 1005, 1006, 1007]],

         [[1014, 1015, 1016, 1017, 1018, 1019],
          [1020, 1021, 1022, 1023, 1024, 1025],
          [1026, 1027, 1028, 1029, 1030, 1031],
          [1032, 1033, 1034, 1035, 1036, 1037],
          [1038, 1039, 1040, 1041, 1042, 1043]],

         [[1050, 1051, 1052, 1053, 1054, 1055],
          [1056, 1057, 1058, 1059, 1060, 1061],
          [1062, 1063, 1064, 1065, 1066, 1067],
          [1068, 1069, 1070, 1071, 1072, 1073],
          [1074, 1075, 1076, 1077, 1078, 1079]]],


        [[[1086, 1087, 1088, 1089, 1090, 1091],
          [1092, 1093, 1094, 1095, 1096, 1097],
          [1098, 1099, 1100, 1101, 1102, 1103],
          [1104, 1105, 1106, 1107, 1108, 1109],
          [1110, 1111, 1112, 1113, 1114, 1115]],

         [[1122, 1123, 1124, 1125, 1126, 1127],
          [1128, 1129, 1130, 1131, 1132, 1133],
          [1134, 1135, 1136, 1137, 1138, 1139],
          [1140, 1141, 1142, 1143, 1144, 1145],
          [1146, 1147, 1148, 1149, 1150, 1151]],

         [[1158, 1159, 1160, 1161, 1162, 1163],
          [1164, 1165, 1166, 1167, 1168, 1169],
          [1170, 1171, 1172, 1173, 1174, 1175],
          [1176, 1177, 1178, 1179, 1180, 1181],
          [1182, 1183, 1184, 1185, 1186, 1187]],

         [[1194, 1195, 1196, 1197, 1198, 1199],
          [1200, 1201, 1202, 1203, 1204, 1205],
          [1206, 1207, 1208, 1209, 1210, 1211],
          [1212, 1213, 1214, 1215, 1216, 1217],
          [1218, 1219, 1220, 1221, 1222, 1223]],

         [[1230, 1231, 1232, 1233, 1234, 1235],
          [1236, 1237, 1238, 1239, 1240, 1241],
          [1242, 1243, 1244, 1245, 1246, 1247],
          [1248, 1249, 1250, 1251, 1252, 1253],
          [1254, 1255, 1256, 1257, 1258, 1259]]],


        [[[1266, 1267, 1268, 1269, 1270, 1271],
          [1272, 1273, 1274, 1275, 1276, 1277],
          [1278, 1279, 1280, 1281, 1282, 1283],
          [1284, 1285, 1286, 1287, 1288, 1289],
          [1290, 1291, 1292, 1293, 1294, 1295]],

         [[1302, 1303, 1304, 1305, 1306, 1307],
          [1308, 1309, 1310, 1311, 1312, 1313],
          [1314, 1315, 1316, 1317, 1318, 1319],
          [1320, 1321, 1322, 1323, 1324, 1325],
          [1326, 1327, 1328, 1329, 1330, 1331]],

         [[1338, 1339, 1340, 1341, 1342, 1343],
          [1344, 1345, 1346, 1347, 1348, 1349],
          [1350, 1351, 1352, 1353, 1354, 1355],
          [1356, 1357, 1358, 1359, 1360, 1361],
          [1362, 1363, 1364, 1365, 1366, 1367]],

         [[1374, 1375, 1376, 1377, 1378, 1379],
          [1380, 1381, 1382, 1383, 1384, 1385],
          [1386, 1387, 1388, 1389, 1390, 1391],
          [1392, 1393, 1394, 1395, 1396, 1397],
          [1398, 1399, 1400, 1401, 1402, 1403]],

         [[1410, 1411, 1412, 1413, 1414, 1415],
          [1416, 1417, 1418, 1419, 1420, 1421],
          [1422, 1423, 1424, 1425, 1426, 1427],
          [1428, 1429, 1430, 1431, 1432, 1433],
          [1434, 1435, 1436, 1437, 1438, 1439]]]]])
>>> d=np.delete(b,1,3)
>>> d
array([[[[[   6,    7,    8,    9,   10,   11],
          [  18,   19,   20,   21,   22,   23],
          [  24,   25,   26,   27,   28,   29],
          [  30,   31,   32,   33,   34,   35]],

         [[  42,   43,   44,   45,   46,   47],
          [  54,   55,   56,   57,   58,   59],
          [  60,   61,   62,   63,   64,   65],
          [  66,   67,   68,   69,   70,   71]],

         [[  78,   79,   80,   81,   82,   83],
          [  90,   91,   92,   93,   94,   95],
          [  96,   97,   98,   99,  100,  101],
          [ 102,  103,  104,  105,  106,  107]],

         [[ 114,  115,  116,  117,  118,  119],
          [ 126,  127,  128,  129,  130,  131],
          [ 132,  133,  134,  135,  136,  137],
          [ 138,  139,  140,  141,  142,  143]],

         [[ 150,  151,  152,  153,  154,  155],
          [ 162,  163,  164,  165,  166,  167],
          [ 168,  169,  170,  171,  172,  173],
          [ 174,  175,  176,  177,  178,  179]]],


        [[[ 186,  187,  188,  189,  190,  191],
          [ 198,  199,  200,  201,  202,  203],
          [ 204,  205,  206,  207,  208,  209],
          [ 210,  211,  212,  213,  214,  215]],

         [[ 222,  223,  224,  225,  226,  227],
          [ 234,  235,  236,  237,  238,  239],
          [ 240,  241,  242,  243,  244,  245],
          [ 246,  247,  248,  249,  250,  251]],

         [[ 258,  259,  260,  261,  262,  263],
          [ 270,  271,  272,  273,  274,  275],
          [ 276,  277,  278,  279,  280,  281],
          [ 282,  283,  284,  285,  286,  287]],

         [[ 294,  295,  296,  297,  298,  299],
          [ 306,  307,  308,  309,  310,  311],
          [ 312,  313,  314,  315,  316,  317],
          [ 318,  319,  320,  321,  322,  323]],

         [[ 330,  331,  332,  333,  334,  335],
          [ 342,  343,  344,  345,  346,  347],
          [ 348,  349,  350,  351,  352,  353],
          [ 354,  355,  356,  357,  358,  359]]],


        [[[ 366,  367,  368,  369,  370,  371],
          [ 378,  379,  380,  381,  382,  383],
          [ 384,  385,  386,  387,  388,  389],
          [ 390,  391,  392,  393,  394,  395]],

         [[ 402,  403,  404,  405,  406,  407],
          [ 414,  415,  416,  417,  418,  419],
          [ 420,  421,  422,  423,  424,  425],
          [ 426,  427,  428,  429,  430,  431]],

         [[ 438,  439,  440,  441,  442,  443],
          [ 450,  451,  452,  453,  454,  455],
          [ 456,  457,  458,  459,  460,  461],
          [ 462,  463,  464,  465,  466,  467]],

         [[ 474,  475,  476,  477,  478,  479],
          [ 486,  487,  488,  489,  490,  491],
          [ 492,  493,  494,  495,  496,  497],
          [ 498,  499,  500,  501,  502,  503]],

         [[ 510,  511,  512,  513,  514,  515],
          [ 522,  523,  524,  525,  526,  527],
          [ 528,  529,  530,  531,  532,  533],
          [ 534,  535,  536,  537,  538,  539]]],


        [[[ 546,  547,  548,  549,  550,  551],
          [ 558,  559,  560,  561,  562,  563],
          [ 564,  565,  566,  567,  568,  569],
          [ 570,  571,  572,  573,  574,  575]],

         [[ 582,  583,  584,  585,  586,  587],
          [ 594,  595,  596,  597,  598,  599],
          [ 600,  601,  602,  603,  604,  605],
          [ 606,  607,  608,  609,  610,  611]],

         [[ 618,  619,  620,  621,  622,  623],
          [ 630,  631,  632,  633,  634,  635],
          [ 636,  637,  638,  639,  640,  641],
          [ 642,  643,  644,  645,  646,  647]],

         [[ 654,  655,  656,  657,  658,  659],
          [ 666,  667,  668,  669,  670,  671],
          [ 672,  673,  674,  675,  676,  677],
          [ 678,  679,  680,  681,  682,  683]],

         [[ 690,  691,  692,  693,  694,  695],
          [ 702,  703,  704,  705,  706,  707],
          [ 708,  709,  710,  711,  712,  713],
          [ 714,  715,  716,  717,  718,  719]]]],



       [[[[ 726,  727,  728,  729,  730,  731],
          [ 738,  739,  740,  741,  742,  743],
          [ 744,  745,  746,  747,  748,  749],
          [ 750,  751,  752,  753,  754,  755]],

         [[ 762,  763,  764,  765,  766,  767],
          [ 774,  775,  776,  777,  778,  779],
          [ 780,  781,  782,  783,  784,  785],
          [ 786,  787,  788,  789,  790,  791]],

         [[ 798,  799,  800,  801,  802,  803],
          [ 810,  811,  812,  813,  814,  815],
          [ 816,  817,  818,  819,  820,  821],
          [ 822,  823,  824,  825,  826,  827]],

         [[ 834,  835,  836,  837,  838,  839],
          [ 846,  847,  848,  849,  850,  851],
          [ 852,  853,  854,  855,  856,  857],
          [ 858,  859,  860,  861,  862,  863]],

         [[ 870,  871,  872,  873,  874,  875],
          [ 882,  883,  884,  885,  886,  887],
          [ 888,  889,  890,  891,  892,  893],
          [ 894,  895,  896,  897,  898,  899]]],


        [[[ 906,  907,  908,  909,  910,  911],
          [ 918,  919,  920,  921,  922,  923],
          [ 924,  925,  926,  927,  928,  929],
          [ 930,  931,  932,  933,  934,  935]],

         [[ 942,  943,  944,  945,  946,  947],
          [ 954,  955,  956,  957,  958,  959],
          [ 960,  961,  962,  963,  964,  965],
          [ 966,  967,  968,  969,  970,  971]],

         [[ 978,  979,  980,  981,  982,  983],
          [ 990,  991,  992,  993,  994,  995],
          [ 996,  997,  998,  999, 1000, 1001],
          [1002, 1003, 1004, 1005, 1006, 1007]],

         [[1014, 1015, 1016, 1017, 1018, 1019],
          [1026, 1027, 1028, 1029, 1030, 1031],
          [1032, 1033, 1034, 1035, 1036, 1037],
          [1038, 1039, 1040, 1041, 1042, 1043]],

         [[1050, 1051, 1052, 1053, 1054, 1055],
          [1062, 1063, 1064, 1065, 1066, 1067],
          [1068, 1069, 1070, 1071, 1072, 1073],
          [1074, 1075, 1076, 1077, 1078, 1079]]],


        [[[1086, 1087, 1088, 1089, 1090, 1091],
          [1098, 1099, 1100, 1101, 1102, 1103],
          [1104, 1105, 1106, 1107, 1108, 1109],
          [1110, 1111, 1112, 1113, 1114, 1115]],

         [[1122, 1123, 1124, 1125, 1126, 1127],
          [1134, 1135, 1136, 1137, 1138, 1139],
          [1140, 1141, 1142, 1143, 1144, 1145],
          [1146, 1147, 1148, 1149, 1150, 1151]],

         [[1158, 1159, 1160, 1161, 1162, 1163],
          [1170, 1171, 1172, 1173, 1174, 1175],
          [1176, 1177, 1178, 1179, 1180, 1181],
          [1182, 1183, 1184, 1185, 1186, 1187]],

         [[1194, 1195, 1196, 1197, 1198, 1199],
          [1206, 1207, 1208, 1209, 1210, 1211],
          [1212, 1213, 1214, 1215, 1216, 1217],
          [1218, 1219, 1220, 1221, 1222, 1223]],

         [[1230, 1231, 1232, 1233, 1234, 1235],
          [1242, 1243, 1244, 1245, 1246, 1247],
          [1248, 1249, 1250, 1251, 1252, 1253],
          [1254, 1255, 1256, 1257, 1258, 1259]]],


        [[[1266, 1267, 1268, 1269, 1270, 1271],
          [1278, 1279, 1280, 1281, 1282, 1283],
          [1284, 1285, 1286, 1287, 1288, 1289],
          [1290, 1291, 1292, 1293, 1294, 1295]],

         [[1302, 1303, 1304, 1305, 1306, 1307],
          [1314, 1315, 1316, 1317, 1318, 1319],
          [1320, 1321, 1322, 1323, 1324, 1325],
          [1326, 1327, 1328, 1329, 1330, 1331]],

         [[1338, 1339, 1340, 1341, 1342, 1343],
          [1350, 1351, 1352, 1353, 1354, 1355],
          [1356, 1357, 1358, 1359, 1360, 1361],
          [1362, 1363, 1364, 1365, 1366, 1367]],

         [[1374, 1375, 1376, 1377, 1378, 1379],
          [1386, 1387, 1388, 1389, 1390, 1391],
          [1392, 1393, 1394, 1395, 1396, 1397],
          [1398, 1399, 1400, 1401, 1402, 1403]],

         [[1410, 1411, 1412, 1413, 1414, 1415],
          [1422, 1423, 1424, 1425, 1426, 1427],
          [1428, 1429, 1430, 1431, 1432, 1433],
          [1434, 1435, 1436, 1437, 1438, 1439]]]]])
>>> e=np.delete(d,0,4)
>>> e
array([[[[[   7,    8,    9,   10,   11],
          [  19,   20,   21,   22,   23],
          [  25,   26,   27,   28,   29],
          [  31,   32,   33,   34,   35]],

         [[  43,   44,   45,   46,   47],
          [  55,   56,   57,   58,   59],
          [  61,   62,   63,   64,   65],
          [  67,   68,   69,   70,   71]],

         [[  79,   80,   81,   82,   83],
          [  91,   92,   93,   94,   95],
          [  97,   98,   99,  100,  101],
          [ 103,  104,  105,  106,  107]],

         [[ 115,  116,  117,  118,  119],
          [ 127,  128,  129,  130,  131],
          [ 133,  134,  135,  136,  137],
          [ 139,  140,  141,  142,  143]],

         [[ 151,  152,  153,  154,  155],
          [ 163,  164,  165,  166,  167],
          [ 169,  170,  171,  172,  173],
          [ 175,  176,  177,  178,  179]]],


        [[[ 187,  188,  189,  190,  191],
          [ 199,  200,  201,  202,  203],
          [ 205,  206,  207,  208,  209],
          [ 211,  212,  213,  214,  215]],

         [[ 223,  224,  225,  226,  227],
          [ 235,  236,  237,  238,  239],
          [ 241,  242,  243,  244,  245],
          [ 247,  248,  249,  250,  251]],

         [[ 259,  260,  261,  262,  263],
          [ 271,  272,  273,  274,  275],
          [ 277,  278,  279,  280,  281],
          [ 283,  284,  285,  286,  287]],

         [[ 295,  296,  297,  298,  299],
          [ 307,  308,  309,  310,  311],
          [ 313,  314,  315,  316,  317],
          [ 319,  320,  321,  322,  323]],

         [[ 331,  332,  333,  334,  335],
          [ 343,  344,  345,  346,  347],
          [ 349,  350,  351,  352,  353],
          [ 355,  356,  357,  358,  359]]],


        [[[ 367,  368,  369,  370,  371],
          [ 379,  380,  381,  382,  383],
          [ 385,  386,  387,  388,  389],
          [ 391,  392,  393,  394,  395]],

         [[ 403,  404,  405,  406,  407],
          [ 415,  416,  417,  418,  419],
          [ 421,  422,  423,  424,  425],
          [ 427,  428,  429,  430,  431]],

         [[ 439,  440,  441,  442,  443],
          [ 451,  452,  453,  454,  455],
          [ 457,  458,  459,  460,  461],
          [ 463,  464,  465,  466,  467]],

         [[ 475,  476,  477,  478,  479],
          [ 487,  488,  489,  490,  491],
          [ 493,  494,  495,  496,  497],
          [ 499,  500,  501,  502,  503]],

         [[ 511,  512,  513,  514,  515],
          [ 523,  524,  525,  526,  527],
          [ 529,  530,  531,  532,  533],
          [ 535,  536,  537,  538,  539]]],


        [[[ 547,  548,  549,  550,  551],
          [ 559,  560,  561,  562,  563],
          [ 565,  566,  567,  568,  569],
          [ 571,  572,  573,  574,  575]],

         [[ 583,  584,  585,  586,  587],
          [ 595,  596,  597,  598,  599],
          [ 601,  602,  603,  604,  605],
          [ 607,  608,  609,  610,  611]],

         [[ 619,  620,  621,  622,  623],
          [ 631,  632,  633,  634,  635],
          [ 637,  638,  639,  640,  641],
          [ 643,  644,  645,  646,  647]],

         [[ 655,  656,  657,  658,  659],
          [ 667,  668,  669,  670,  671],
          [ 673,  674,  675,  676,  677],
          [ 679,  680,  681,  682,  683]],

         [[ 691,  692,  693,  694,  695],
          [ 703,  704,  705,  706,  707],
          [ 709,  710,  711,  712,  713],
          [ 715,  716,  717,  718,  719]]]],



       [[[[ 727,  728,  729,  730,  731],
          [ 739,  740,  741,  742,  743],
          [ 745,  746,  747,  748,  749],
          [ 751,  752,  753,  754,  755]],

         [[ 763,  764,  765,  766,  767],
          [ 775,  776,  777,  778,  779],
          [ 781,  782,  783,  784,  785],
          [ 787,  788,  789,  790,  791]],

         [[ 799,  800,  801,  802,  803],
          [ 811,  812,  813,  814,  815],
          [ 817,  818,  819,  820,  821],
          [ 823,  824,  825,  826,  827]],

         [[ 835,  836,  837,  838,  839],
          [ 847,  848,  849,  850,  851],
          [ 853,  854,  855,  856,  857],
          [ 859,  860,  861,  862,  863]],

         [[ 871,  872,  873,  874,  875],
          [ 883,  884,  885,  886,  887],
          [ 889,  890,  891,  892,  893],
          [ 895,  896,  897,  898,  899]]],


        [[[ 907,  908,  909,  910,  911],
          [ 919,  920,  921,  922,  923],
          [ 925,  926,  927,  928,  929],
          [ 931,  932,  933,  934,  935]],

         [[ 943,  944,  945,  946,  947],
          [ 955,  956,  957,  958,  959],
          [ 961,  962,  963,  964,  965],
          [ 967,  968,  969,  970,  971]],

         [[ 979,  980,  981,  982,  983],
          [ 991,  992,  993,  994,  995],
          [ 997,  998,  999, 1000, 1001],
          [1003, 1004, 1005, 1006, 1007]],

         [[1015, 1016, 1017, 1018, 1019],
          [1027, 1028, 1029, 1030, 1031],
          [1033, 1034, 1035, 1036, 1037],
          [1039, 1040, 1041, 1042, 1043]],

         [[1051, 1052, 1053, 1054, 1055],
          [1063, 1064, 1065, 1066, 1067],
          [1069, 1070, 1071, 1072, 1073],
          [1075, 1076, 1077, 1078, 1079]]],


        [[[1087, 1088, 1089, 1090, 1091],
          [1099, 1100, 1101, 1102, 1103],
          [1105, 1106, 1107, 1108, 1109],
          [1111, 1112, 1113, 1114, 1115]],

         [[1123, 1124, 1125, 1126, 1127],
          [1135, 1136, 1137, 1138, 1139],
          [1141, 1142, 1143, 1144, 1145],
          [1147, 1148, 1149, 1150, 1151]],

         [[1159, 1160, 1161, 1162, 1163],
          [1171, 1172, 1173, 1174, 1175],
          [1177, 1178, 1179, 1180, 1181],
          [1183, 1184, 1185, 1186, 1187]],

         [[1195, 1196, 1197, 1198, 1199],
          [1207, 1208, 1209, 1210, 1211],
          [1213, 1214, 1215, 1216, 1217],
          [1219, 1220, 1221, 1222, 1223]],

         [[1231, 1232, 1233, 1234, 1235],
          [1243, 1244, 1245, 1246, 1247],
          [1249, 1250, 1251, 1252, 1253],
          [1255, 1256, 1257, 1258, 1259]]],


        [[[1267, 1268, 1269, 1270, 1271],
          [1279, 1280, 1281, 1282, 1283],
          [1285, 1286, 1287, 1288, 1289],
          [1291, 1292, 1293, 1294, 1295]],

         [[1303, 1304, 1305, 1306, 1307],
          [1315, 1316, 1317, 1318, 1319],
          [1321, 1322, 1323, 1324, 1325],
          [1327, 1328, 1329, 1330, 1331]],

         [[1339, 1340, 1341, 1342, 1343],
          [1351, 1352, 1353, 1354, 1355],
          [1357, 1358, 1359, 1360, 1361],
          [1363, 1364, 1365, 1366, 1367]],

         [[1375, 1376, 1377, 1378, 1379],
          [1387, 1388, 1389, 1390, 1391],
          [1393, 1394, 1395, 1396, 1397],
          [1399, 1400, 1401, 1402, 1403]],

         [[1411, 1412, 1413, 1414, 1415],
          [1423, 1424, 1425, 1426, 1427],
          [1429, 1430, 1431, 1432, 1433],
          [1435, 1436, 1437, 1438, 1439]]]]])
>>> f=np.delete(e,0,5)
Traceback (most recent call last):
  File "<pyshell#226>", line 1, in <module>
    f=np.delete(e,0,5)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\lib\function_base.py", line 4305, in delete
    axis = normalize_axis_index(axis, ndim)
numpy.AxisError: axis 5 is out of bounds for array of dimension 5
>>> f=np.delete(e,0,4)
>>> f
array([[[[[   8,    9,   10,   11],
          [  20,   21,   22,   23],
          [  26,   27,   28,   29],
          [  32,   33,   34,   35]],

         [[  44,   45,   46,   47],
          [  56,   57,   58,   59],
          [  62,   63,   64,   65],
          [  68,   69,   70,   71]],

         [[  80,   81,   82,   83],
          [  92,   93,   94,   95],
          [  98,   99,  100,  101],
          [ 104,  105,  106,  107]],

         [[ 116,  117,  118,  119],
          [ 128,  129,  130,  131],
          [ 134,  135,  136,  137],
          [ 140,  141,  142,  143]],

         [[ 152,  153,  154,  155],
          [ 164,  165,  166,  167],
          [ 170,  171,  172,  173],
          [ 176,  177,  178,  179]]],


        [[[ 188,  189,  190,  191],
          [ 200,  201,  202,  203],
          [ 206,  207,  208,  209],
          [ 212,  213,  214,  215]],

         [[ 224,  225,  226,  227],
          [ 236,  237,  238,  239],
          [ 242,  243,  244,  245],
          [ 248,  249,  250,  251]],

         [[ 260,  261,  262,  263],
          [ 272,  273,  274,  275],
          [ 278,  279,  280,  281],
          [ 284,  285,  286,  287]],

         [[ 296,  297,  298,  299],
          [ 308,  309,  310,  311],
          [ 314,  315,  316,  317],
          [ 320,  321,  322,  323]],

         [[ 332,  333,  334,  335],
          [ 344,  345,  346,  347],
          [ 350,  351,  352,  353],
          [ 356,  357,  358,  359]]],


        [[[ 368,  369,  370,  371],
          [ 380,  381,  382,  383],
          [ 386,  387,  388,  389],
          [ 392,  393,  394,  395]],

         [[ 404,  405,  406,  407],
          [ 416,  417,  418,  419],
          [ 422,  423,  424,  425],
          [ 428,  429,  430,  431]],

         [[ 440,  441,  442,  443],
          [ 452,  453,  454,  455],
          [ 458,  459,  460,  461],
          [ 464,  465,  466,  467]],

         [[ 476,  477,  478,  479],
          [ 488,  489,  490,  491],
          [ 494,  495,  496,  497],
          [ 500,  501,  502,  503]],

         [[ 512,  513,  514,  515],
          [ 524,  525,  526,  527],
          [ 530,  531,  532,  533],
          [ 536,  537,  538,  539]]],


        [[[ 548,  549,  550,  551],
          [ 560,  561,  562,  563],
          [ 566,  567,  568,  569],
          [ 572,  573,  574,  575]],

         [[ 584,  585,  586,  587],
          [ 596,  597,  598,  599],
          [ 602,  603,  604,  605],
          [ 608,  609,  610,  611]],

         [[ 620,  621,  622,  623],
          [ 632,  633,  634,  635],
          [ 638,  639,  640,  641],
          [ 644,  645,  646,  647]],

         [[ 656,  657,  658,  659],
          [ 668,  669,  670,  671],
          [ 674,  675,  676,  677],
          [ 680,  681,  682,  683]],

         [[ 692,  693,  694,  695],
          [ 704,  705,  706,  707],
          [ 710,  711,  712,  713],
          [ 716,  717,  718,  719]]]],



       [[[[ 728,  729,  730,  731],
          [ 740,  741,  742,  743],
          [ 746,  747,  748,  749],
          [ 752,  753,  754,  755]],

         [[ 764,  765,  766,  767],
          [ 776,  777,  778,  779],
          [ 782,  783,  784,  785],
          [ 788,  789,  790,  791]],

         [[ 800,  801,  802,  803],
          [ 812,  813,  814,  815],
          [ 818,  819,  820,  821],
          [ 824,  825,  826,  827]],

         [[ 836,  837,  838,  839],
          [ 848,  849,  850,  851],
          [ 854,  855,  856,  857],
          [ 860,  861,  862,  863]],

         [[ 872,  873,  874,  875],
          [ 884,  885,  886,  887],
          [ 890,  891,  892,  893],
          [ 896,  897,  898,  899]]],


        [[[ 908,  909,  910,  911],
          [ 920,  921,  922,  923],
          [ 926,  927,  928,  929],
          [ 932,  933,  934,  935]],

         [[ 944,  945,  946,  947],
          [ 956,  957,  958,  959],
          [ 962,  963,  964,  965],
          [ 968,  969,  970,  971]],

         [[ 980,  981,  982,  983],
          [ 992,  993,  994,  995],
          [ 998,  999, 1000, 1001],
          [1004, 1005, 1006, 1007]],

         [[1016, 1017, 1018, 1019],
          [1028, 1029, 1030, 1031],
          [1034, 1035, 1036, 1037],
          [1040, 1041, 1042, 1043]],

         [[1052, 1053, 1054, 1055],
          [1064, 1065, 1066, 1067],
          [1070, 1071, 1072, 1073],
          [1076, 1077, 1078, 1079]]],


        [[[1088, 1089, 1090, 1091],
          [1100, 1101, 1102, 1103],
          [1106, 1107, 1108, 1109],
          [1112, 1113, 1114, 1115]],

         [[1124, 1125, 1126, 1127],
          [1136, 1137, 1138, 1139],
          [1142, 1143, 1144, 1145],
          [1148, 1149, 1150, 1151]],

         [[1160, 1161, 1162, 1163],
          [1172, 1173, 1174, 1175],
          [1178, 1179, 1180, 1181],
          [1184, 1185, 1186, 1187]],

         [[1196, 1197, 1198, 1199],
          [1208, 1209, 1210, 1211],
          [1214, 1215, 1216, 1217],
          [1220, 1221, 1222, 1223]],

         [[1232, 1233, 1234, 1235],
          [1244, 1245, 1246, 1247],
          [1250, 1251, 1252, 1253],
          [1256, 1257, 1258, 1259]]],


        [[[1268, 1269, 1270, 1271],
          [1280, 1281, 1282, 1283],
          [1286, 1287, 1288, 1289],
          [1292, 1293, 1294, 1295]],

         [[1304, 1305, 1306, 1307],
          [1316, 1317, 1318, 1319],
          [1322, 1323, 1324, 1325],
          [1328, 1329, 1330, 1331]],

         [[1340, 1341, 1342, 1343],
          [1352, 1353, 1354, 1355],
          [1358, 1359, 1360, 1361],
          [1364, 1365, 1366, 1367]],

         [[1376, 1377, 1378, 1379],
          [1388, 1389, 1390, 1391],
          [1394, 1395, 1396, 1397],
          [1400, 1401, 1402, 1403]],

         [[1412, 1413, 1414, 1415],
          [1424, 1425, 1426, 1427],
          [1430, 1431, 1432, 1433],
          [1436, 1437, 1438, 1439]]]]])
>>> 
